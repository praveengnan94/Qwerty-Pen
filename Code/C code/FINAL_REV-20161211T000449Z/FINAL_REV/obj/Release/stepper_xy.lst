                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Mon Dec 05 17:16:28 2016
                              5 ;--------------------------------------------------------
                              6 	.module stepper_xy
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _P5_7
                             13 	.globl _P5_6
                             14 	.globl _P5_5
                             15 	.globl _P5_4
                             16 	.globl _P5_3
                             17 	.globl _P5_2
                             18 	.globl _P5_1
                             19 	.globl _P5_0
                             20 	.globl _P4_7
                             21 	.globl _P4_6
                             22 	.globl _P4_5
                             23 	.globl _P4_4
                             24 	.globl _P4_3
                             25 	.globl _P4_2
                             26 	.globl _P4_1
                             27 	.globl _P4_0
                             28 	.globl _PX0L
                             29 	.globl _PT0L
                             30 	.globl _PX1L
                             31 	.globl _PT1L
                             32 	.globl _PLS
                             33 	.globl _PT2L
                             34 	.globl _PPCL
                             35 	.globl _EC
                             36 	.globl _CCF0
                             37 	.globl _CCF1
                             38 	.globl _CCF2
                             39 	.globl _CCF3
                             40 	.globl _CCF4
                             41 	.globl _CR
                             42 	.globl _CF
                             43 	.globl _TF2
                             44 	.globl _EXF2
                             45 	.globl _RCLK
                             46 	.globl _TCLK
                             47 	.globl _EXEN2
                             48 	.globl _TR2
                             49 	.globl _C_T2
                             50 	.globl _CP_RL2
                             51 	.globl _T2CON_7
                             52 	.globl _T2CON_6
                             53 	.globl _T2CON_5
                             54 	.globl _T2CON_4
                             55 	.globl _T2CON_3
                             56 	.globl _T2CON_2
                             57 	.globl _T2CON_1
                             58 	.globl _T2CON_0
                             59 	.globl _PT2
                             60 	.globl _ET2
                             61 	.globl _CY
                             62 	.globl _AC
                             63 	.globl _F0
                             64 	.globl _RS1
                             65 	.globl _RS0
                             66 	.globl _OV
                             67 	.globl _F1
                             68 	.globl _P
                             69 	.globl _PS
                             70 	.globl _PT1
                             71 	.globl _PX1
                             72 	.globl _PT0
                             73 	.globl _PX0
                             74 	.globl _RD
                             75 	.globl _WR
                             76 	.globl _T1
                             77 	.globl _T0
                             78 	.globl _INT1
                             79 	.globl _INT0
                             80 	.globl _TXD
                             81 	.globl _RXD
                             82 	.globl _P3_7
                             83 	.globl _P3_6
                             84 	.globl _P3_5
                             85 	.globl _P3_4
                             86 	.globl _P3_3
                             87 	.globl _P3_2
                             88 	.globl _P3_1
                             89 	.globl _P3_0
                             90 	.globl _EA
                             91 	.globl _ES
                             92 	.globl _ET1
                             93 	.globl _EX1
                             94 	.globl _ET0
                             95 	.globl _EX0
                             96 	.globl _P2_7
                             97 	.globl _P2_6
                             98 	.globl _P2_5
                             99 	.globl _P2_4
                            100 	.globl _P2_3
                            101 	.globl _P2_2
                            102 	.globl _P2_1
                            103 	.globl _P2_0
                            104 	.globl _SM0
                            105 	.globl _SM1
                            106 	.globl _SM2
                            107 	.globl _REN
                            108 	.globl _TB8
                            109 	.globl _RB8
                            110 	.globl _TI
                            111 	.globl _RI
                            112 	.globl _P1_7
                            113 	.globl _P1_6
                            114 	.globl _P1_5
                            115 	.globl _P1_4
                            116 	.globl _P1_3
                            117 	.globl _P1_2
                            118 	.globl _P1_1
                            119 	.globl _P1_0
                            120 	.globl _TF1
                            121 	.globl _TR1
                            122 	.globl _TF0
                            123 	.globl _TR0
                            124 	.globl _IE1
                            125 	.globl _IT1
                            126 	.globl _IE0
                            127 	.globl _IT0
                            128 	.globl _P0_7
                            129 	.globl _P0_6
                            130 	.globl _P0_5
                            131 	.globl _P0_4
                            132 	.globl _P0_3
                            133 	.globl _P0_2
                            134 	.globl _P0_1
                            135 	.globl _P0_0
                            136 	.globl _EECON
                            137 	.globl _KBF
                            138 	.globl _KBE
                            139 	.globl _KBLS
                            140 	.globl _BRL
                            141 	.globl _BDRCON
                            142 	.globl _T2MOD
                            143 	.globl _SPDAT
                            144 	.globl _SPSTA
                            145 	.globl _SPCON
                            146 	.globl _SADEN
                            147 	.globl _SADDR
                            148 	.globl _WDTPRG
                            149 	.globl _WDTRST
                            150 	.globl _P5
                            151 	.globl _P4
                            152 	.globl _IPH1
                            153 	.globl _IPL1
                            154 	.globl _IPH0
                            155 	.globl _IPL0
                            156 	.globl _IEN1
                            157 	.globl _IEN0
                            158 	.globl _CMOD
                            159 	.globl _CL
                            160 	.globl _CH
                            161 	.globl _CCON
                            162 	.globl _CCAPM4
                            163 	.globl _CCAPM3
                            164 	.globl _CCAPM2
                            165 	.globl _CCAPM1
                            166 	.globl _CCAPM0
                            167 	.globl _CCAP4L
                            168 	.globl _CCAP3L
                            169 	.globl _CCAP2L
                            170 	.globl _CCAP1L
                            171 	.globl _CCAP0L
                            172 	.globl _CCAP4H
                            173 	.globl _CCAP3H
                            174 	.globl _CCAP2H
                            175 	.globl _CCAP1H
                            176 	.globl _CCAP0H
                            177 	.globl _CKCKON1
                            178 	.globl _CKCKON0
                            179 	.globl _CKRL
                            180 	.globl _AUXR1
                            181 	.globl _AUXR
                            182 	.globl _TH2
                            183 	.globl _TL2
                            184 	.globl _RCAP2H
                            185 	.globl _RCAP2L
                            186 	.globl _T2CON
                            187 	.globl _B
                            188 	.globl _ACC
                            189 	.globl _PSW
                            190 	.globl _IP
                            191 	.globl _P3
                            192 	.globl _IE
                            193 	.globl _P2
                            194 	.globl _SBUF
                            195 	.globl _SCON
                            196 	.globl _P1
                            197 	.globl _TH1
                            198 	.globl _TH0
                            199 	.globl _TL1
                            200 	.globl _TL0
                            201 	.globl _TMOD
                            202 	.globl _TCON
                            203 	.globl _PCON
                            204 	.globl _DPH
                            205 	.globl _DPL
                            206 	.globl _SP
                            207 	.globl _P0
                            208 	.globl _move_left
                            209 	.globl _move_right
                            210 	.globl _move_down_right
                            211 	.globl _move_up_right
                            212 	.globl _move_down_left
                            213 	.globl _move_up_left
                            214 	.globl _top_down_right
                            215 	.globl _right_down_left
                            216 	.globl _down_up_left
                            217 	.globl _left_up_right
                            218 	.globl _move_up
                            219 	.globl _move_down
                            220 ;--------------------------------------------------------
                            221 ; special function registers
                            222 ;--------------------------------------------------------
                            223 	.area RSEG    (DATA)
                    0080    224 _P0	=	0x0080
                    0081    225 _SP	=	0x0081
                    0082    226 _DPL	=	0x0082
                    0083    227 _DPH	=	0x0083
                    0087    228 _PCON	=	0x0087
                    0088    229 _TCON	=	0x0088
                    0089    230 _TMOD	=	0x0089
                    008A    231 _TL0	=	0x008a
                    008B    232 _TL1	=	0x008b
                    008C    233 _TH0	=	0x008c
                    008D    234 _TH1	=	0x008d
                    0090    235 _P1	=	0x0090
                    0098    236 _SCON	=	0x0098
                    0099    237 _SBUF	=	0x0099
                    00A0    238 _P2	=	0x00a0
                    00A8    239 _IE	=	0x00a8
                    00B0    240 _P3	=	0x00b0
                    00B8    241 _IP	=	0x00b8
                    00D0    242 _PSW	=	0x00d0
                    00E0    243 _ACC	=	0x00e0
                    00F0    244 _B	=	0x00f0
                    00C8    245 _T2CON	=	0x00c8
                    00CA    246 _RCAP2L	=	0x00ca
                    00CB    247 _RCAP2H	=	0x00cb
                    00CC    248 _TL2	=	0x00cc
                    00CD    249 _TH2	=	0x00cd
                    008E    250 _AUXR	=	0x008e
                    00A2    251 _AUXR1	=	0x00a2
                    0097    252 _CKRL	=	0x0097
                    008F    253 _CKCKON0	=	0x008f
                    008F    254 _CKCKON1	=	0x008f
                    00FA    255 _CCAP0H	=	0x00fa
                    00FB    256 _CCAP1H	=	0x00fb
                    00FC    257 _CCAP2H	=	0x00fc
                    00FD    258 _CCAP3H	=	0x00fd
                    00FE    259 _CCAP4H	=	0x00fe
                    00EA    260 _CCAP0L	=	0x00ea
                    00EB    261 _CCAP1L	=	0x00eb
                    00EC    262 _CCAP2L	=	0x00ec
                    00ED    263 _CCAP3L	=	0x00ed
                    00EE    264 _CCAP4L	=	0x00ee
                    00DA    265 _CCAPM0	=	0x00da
                    00DB    266 _CCAPM1	=	0x00db
                    00DC    267 _CCAPM2	=	0x00dc
                    00DD    268 _CCAPM3	=	0x00dd
                    00DE    269 _CCAPM4	=	0x00de
                    00D8    270 _CCON	=	0x00d8
                    00F9    271 _CH	=	0x00f9
                    00E9    272 _CL	=	0x00e9
                    00D9    273 _CMOD	=	0x00d9
                    00A8    274 _IEN0	=	0x00a8
                    00B1    275 _IEN1	=	0x00b1
                    00B8    276 _IPL0	=	0x00b8
                    00B7    277 _IPH0	=	0x00b7
                    00B2    278 _IPL1	=	0x00b2
                    00B3    279 _IPH1	=	0x00b3
                    00C0    280 _P4	=	0x00c0
                    00D8    281 _P5	=	0x00d8
                    00A6    282 _WDTRST	=	0x00a6
                    00A7    283 _WDTPRG	=	0x00a7
                    00A9    284 _SADDR	=	0x00a9
                    00B9    285 _SADEN	=	0x00b9
                    00C3    286 _SPCON	=	0x00c3
                    00C4    287 _SPSTA	=	0x00c4
                    00C5    288 _SPDAT	=	0x00c5
                    00C9    289 _T2MOD	=	0x00c9
                    009B    290 _BDRCON	=	0x009b
                    009A    291 _BRL	=	0x009a
                    009C    292 _KBLS	=	0x009c
                    009D    293 _KBE	=	0x009d
                    009E    294 _KBF	=	0x009e
                    00D2    295 _EECON	=	0x00d2
                            296 ;--------------------------------------------------------
                            297 ; special function bits
                            298 ;--------------------------------------------------------
                            299 	.area RSEG    (DATA)
                    0080    300 _P0_0	=	0x0080
                    0081    301 _P0_1	=	0x0081
                    0082    302 _P0_2	=	0x0082
                    0083    303 _P0_3	=	0x0083
                    0084    304 _P0_4	=	0x0084
                    0085    305 _P0_5	=	0x0085
                    0086    306 _P0_6	=	0x0086
                    0087    307 _P0_7	=	0x0087
                    0088    308 _IT0	=	0x0088
                    0089    309 _IE0	=	0x0089
                    008A    310 _IT1	=	0x008a
                    008B    311 _IE1	=	0x008b
                    008C    312 _TR0	=	0x008c
                    008D    313 _TF0	=	0x008d
                    008E    314 _TR1	=	0x008e
                    008F    315 _TF1	=	0x008f
                    0090    316 _P1_0	=	0x0090
                    0091    317 _P1_1	=	0x0091
                    0092    318 _P1_2	=	0x0092
                    0093    319 _P1_3	=	0x0093
                    0094    320 _P1_4	=	0x0094
                    0095    321 _P1_5	=	0x0095
                    0096    322 _P1_6	=	0x0096
                    0097    323 _P1_7	=	0x0097
                    0098    324 _RI	=	0x0098
                    0099    325 _TI	=	0x0099
                    009A    326 _RB8	=	0x009a
                    009B    327 _TB8	=	0x009b
                    009C    328 _REN	=	0x009c
                    009D    329 _SM2	=	0x009d
                    009E    330 _SM1	=	0x009e
                    009F    331 _SM0	=	0x009f
                    00A0    332 _P2_0	=	0x00a0
                    00A1    333 _P2_1	=	0x00a1
                    00A2    334 _P2_2	=	0x00a2
                    00A3    335 _P2_3	=	0x00a3
                    00A4    336 _P2_4	=	0x00a4
                    00A5    337 _P2_5	=	0x00a5
                    00A6    338 _P2_6	=	0x00a6
                    00A7    339 _P2_7	=	0x00a7
                    00A8    340 _EX0	=	0x00a8
                    00A9    341 _ET0	=	0x00a9
                    00AA    342 _EX1	=	0x00aa
                    00AB    343 _ET1	=	0x00ab
                    00AC    344 _ES	=	0x00ac
                    00AF    345 _EA	=	0x00af
                    00B0    346 _P3_0	=	0x00b0
                    00B1    347 _P3_1	=	0x00b1
                    00B2    348 _P3_2	=	0x00b2
                    00B3    349 _P3_3	=	0x00b3
                    00B4    350 _P3_4	=	0x00b4
                    00B5    351 _P3_5	=	0x00b5
                    00B6    352 _P3_6	=	0x00b6
                    00B7    353 _P3_7	=	0x00b7
                    00B0    354 _RXD	=	0x00b0
                    00B1    355 _TXD	=	0x00b1
                    00B2    356 _INT0	=	0x00b2
                    00B3    357 _INT1	=	0x00b3
                    00B4    358 _T0	=	0x00b4
                    00B5    359 _T1	=	0x00b5
                    00B6    360 _WR	=	0x00b6
                    00B7    361 _RD	=	0x00b7
                    00B8    362 _PX0	=	0x00b8
                    00B9    363 _PT0	=	0x00b9
                    00BA    364 _PX1	=	0x00ba
                    00BB    365 _PT1	=	0x00bb
                    00BC    366 _PS	=	0x00bc
                    00D0    367 _P	=	0x00d0
                    00D1    368 _F1	=	0x00d1
                    00D2    369 _OV	=	0x00d2
                    00D3    370 _RS0	=	0x00d3
                    00D4    371 _RS1	=	0x00d4
                    00D5    372 _F0	=	0x00d5
                    00D6    373 _AC	=	0x00d6
                    00D7    374 _CY	=	0x00d7
                    00AD    375 _ET2	=	0x00ad
                    00BD    376 _PT2	=	0x00bd
                    00C8    377 _T2CON_0	=	0x00c8
                    00C9    378 _T2CON_1	=	0x00c9
                    00CA    379 _T2CON_2	=	0x00ca
                    00CB    380 _T2CON_3	=	0x00cb
                    00CC    381 _T2CON_4	=	0x00cc
                    00CD    382 _T2CON_5	=	0x00cd
                    00CE    383 _T2CON_6	=	0x00ce
                    00CF    384 _T2CON_7	=	0x00cf
                    00C8    385 _CP_RL2	=	0x00c8
                    00C9    386 _C_T2	=	0x00c9
                    00CA    387 _TR2	=	0x00ca
                    00CB    388 _EXEN2	=	0x00cb
                    00CC    389 _TCLK	=	0x00cc
                    00CD    390 _RCLK	=	0x00cd
                    00CE    391 _EXF2	=	0x00ce
                    00CF    392 _TF2	=	0x00cf
                    00DF    393 _CF	=	0x00df
                    00DE    394 _CR	=	0x00de
                    00DC    395 _CCF4	=	0x00dc
                    00DB    396 _CCF3	=	0x00db
                    00DA    397 _CCF2	=	0x00da
                    00D9    398 _CCF1	=	0x00d9
                    00D8    399 _CCF0	=	0x00d8
                    00AE    400 _EC	=	0x00ae
                    00BE    401 _PPCL	=	0x00be
                    00BD    402 _PT2L	=	0x00bd
                    00BC    403 _PLS	=	0x00bc
                    00BB    404 _PT1L	=	0x00bb
                    00BA    405 _PX1L	=	0x00ba
                    00B9    406 _PT0L	=	0x00b9
                    00B8    407 _PX0L	=	0x00b8
                    00C0    408 _P4_0	=	0x00c0
                    00C1    409 _P4_1	=	0x00c1
                    00C2    410 _P4_2	=	0x00c2
                    00C3    411 _P4_3	=	0x00c3
                    00C4    412 _P4_4	=	0x00c4
                    00C5    413 _P4_5	=	0x00c5
                    00C6    414 _P4_6	=	0x00c6
                    00C7    415 _P4_7	=	0x00c7
                    00D8    416 _P5_0	=	0x00d8
                    00D9    417 _P5_1	=	0x00d9
                    00DA    418 _P5_2	=	0x00da
                    00DB    419 _P5_3	=	0x00db
                    00DC    420 _P5_4	=	0x00dc
                    00DD    421 _P5_5	=	0x00dd
                    00DE    422 _P5_6	=	0x00de
                    00DF    423 _P5_7	=	0x00df
                            424 ;--------------------------------------------------------
                            425 ; overlayable register banks
                            426 ;--------------------------------------------------------
                            427 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     428 	.ds 8
                            429 ;--------------------------------------------------------
                            430 ; internal ram data
                            431 ;--------------------------------------------------------
                            432 	.area DSEG    (DATA)
   0000                     433 _top_down_right_sloc0_1_0:
   0000                     434 	.ds 2
   0002                     435 _top_down_right_sloc1_1_0:
   0002                     436 	.ds 4
   0006                     437 _right_down_left_sloc0_1_0:
   0006                     438 	.ds 2
   0008                     439 _right_down_left_sloc1_1_0:
   0008                     440 	.ds 4
   000C                     441 _down_up_left_sloc0_1_0:
   000C                     442 	.ds 2
   000E                     443 _down_up_left_sloc1_1_0:
   000E                     444 	.ds 4
   0012                     445 _left_up_right_sloc0_1_0:
   0012                     446 	.ds 2
   0014                     447 _left_up_right_sloc1_1_0:
   0014                     448 	.ds 4
                            449 ;--------------------------------------------------------
                            450 ; overlayable items in internal ram 
                            451 ;--------------------------------------------------------
                            452 	.area OSEG    (OVR,DATA)
                            453 ;--------------------------------------------------------
                            454 ; indirectly addressable internal ram data
                            455 ;--------------------------------------------------------
                            456 	.area ISEG    (DATA)
                            457 ;--------------------------------------------------------
                            458 ; bit data
                            459 ;--------------------------------------------------------
                            460 	.area BSEG    (BIT)
                            461 ;--------------------------------------------------------
                            462 ; paged external ram data
                            463 ;--------------------------------------------------------
                            464 	.area PSEG    (PAG,XDATA)
                            465 ;--------------------------------------------------------
                            466 ; external ram data
                            467 ;--------------------------------------------------------
                            468 	.area XSEG    (XDATA)
   0000                     469 _move_left_l_1_1:
   0000                     470 	.ds 2
   0002                     471 _move_right_r_1_1:
   0002                     472 	.ds 2
   0004                     473 _move_down_right_dr_1_1:
   0004                     474 	.ds 2
   0006                     475 _move_up_right_dr_1_1:
   0006                     476 	.ds 2
   0008                     477 _move_down_left_dr_1_1:
   0008                     478 	.ds 2
   000A                     479 _move_up_left_dr_1_1:
   000A                     480 	.ds 2
   000C                     481 _top_down_right_new_steps_1_1:
   000C                     482 	.ds 4
   0010                     483 _right_down_left_new_steps_1_1:
   0010                     484 	.ds 4
   0014                     485 _down_up_left_new_steps_1_1:
   0014                     486 	.ds 4
   0018                     487 _left_up_right_new_steps_1_1:
   0018                     488 	.ds 4
   001C                     489 _move_up_u_1_1:
   001C                     490 	.ds 2
   001E                     491 _move_down_d_1_1:
   001E                     492 	.ds 2
                            493 ;--------------------------------------------------------
                            494 ; external initialized ram data
                            495 ;--------------------------------------------------------
                            496 	.area XISEG   (XDATA)
                            497 	.area HOME    (CODE)
                            498 	.area GSINIT0 (CODE)
                            499 	.area GSINIT1 (CODE)
                            500 	.area GSINIT2 (CODE)
                            501 	.area GSINIT3 (CODE)
                            502 	.area GSINIT4 (CODE)
                            503 	.area GSINIT5 (CODE)
                            504 	.area GSINIT  (CODE)
                            505 	.area GSFINAL (CODE)
                            506 	.area CSEG    (CODE)
                            507 ;--------------------------------------------------------
                            508 ; global & static initialisations
                            509 ;--------------------------------------------------------
                            510 	.area HOME    (CODE)
                            511 	.area GSINIT  (CODE)
                            512 	.area GSFINAL (CODE)
                            513 	.area GSINIT  (CODE)
                            514 ;--------------------------------------------------------
                            515 ; Home
                            516 ;--------------------------------------------------------
                            517 	.area HOME    (CODE)
                            518 	.area CSEG    (CODE)
                            519 ;--------------------------------------------------------
                            520 ; code
                            521 ;--------------------------------------------------------
                            522 	.area CSEG    (CODE)
                            523 ;------------------------------------------------------------
                            524 ;Allocation info for local variables in function 'move_left'
                            525 ;------------------------------------------------------------
                            526 ;l                         Allocated with name '_move_left_l_1_1'
                            527 ;------------------------------------------------------------
                            528 ;	stepper_xy.c:6: void move_left(unsigned int l)
                            529 ;	-----------------------------------------
                            530 ;	 function move_left
                            531 ;	-----------------------------------------
   0000                     532 _move_left:
                    0002    533 	ar2 = 0x02
                    0003    534 	ar3 = 0x03
                    0004    535 	ar4 = 0x04
                    0005    536 	ar5 = 0x05
                    0006    537 	ar6 = 0x06
                    0007    538 	ar7 = 0x07
                    0000    539 	ar0 = 0x00
                    0001    540 	ar1 = 0x01
                            541 ;	genReceive
   0000 AA 83               542 	mov	r2,dph
   0002 E5 82               543 	mov	a,dpl
   0004 90s00r00            544 	mov	dptr,#_move_left_l_1_1
   0007 F0                  545 	movx	@dptr,a
   0008 A3                  546 	inc	dptr
   0009 EA                  547 	mov	a,r2
   000A F0                  548 	movx	@dptr,a
                            549 ;	stepper_xy.c:8: EN1 = 0;
                            550 ;	genAssign
   000B C2 A0               551 	clr	_P2_0
                            552 ;	stepper_xy.c:9: EN2 = 0;
                            553 ;	genAssign
   000D C2 A1               554 	clr	_P2_1
                            555 ;	stepper_xy.c:11: DR1 = 1;
                            556 ;	genAssign
   000F D2 A3               557 	setb	_P2_3
                            558 ;	stepper_xy.c:12: DR2 = 1;
                            559 ;	genAssign
   0011 D2 A4               560 	setb	_P2_4
                            561 ;	stepper_xy.c:14: while(l>0)
                            562 ;	genAssign
   0013 90s00r00            563 	mov	dptr,#_move_left_l_1_1
   0016 E0                  564 	movx	a,@dptr
   0017 FA                  565 	mov	r2,a
   0018 A3                  566 	inc	dptr
   0019 E0                  567 	movx	a,@dptr
   001A FB                  568 	mov	r3,a
   001B                     569 00101$:
                            570 ;	genIfx
   001B EA                  571 	mov	a,r2
   001C 4B                  572 	orl	a,r3
                            573 ;	genIfxJump
                            574 ;	Peephole 108.c	removed ljmp by inverse jump logic
   001D 60 33               575 	jz	00108$
                            576 ;	Peephole 300	removed redundant label 00109$
                            577 ;	stepper_xy.c:16: STEPPER_STEP1=0;
                            578 ;	genAssign
   001F C2 90               579 	clr	_P1_0
                            580 ;	stepper_xy.c:17: STEPPER_STEP2=0;
                            581 ;	genAssign
   0021 C2 94               582 	clr	_P1_4
                            583 ;	stepper_xy.c:18: delay_us(STEP_DELAY);
                            584 ;	genCall
                            585 ;	Peephole 182.b	used 16 bit load of dptr
   0023 90 00 11            586 	mov	dptr,#0x0011
   0026 C0 02               587 	push	ar2
   0028 C0 03               588 	push	ar3
   002A 12s00r00            589 	lcall	_delay_us
   002D D0 03               590 	pop	ar3
   002F D0 02               591 	pop	ar2
                            592 ;	stepper_xy.c:19: STEPPER_STEP1=1;
                            593 ;	genAssign
   0031 D2 90               594 	setb	_P1_0
                            595 ;	stepper_xy.c:20: STEPPER_STEP2=1;
                            596 ;	genAssign
   0033 D2 94               597 	setb	_P1_4
                            598 ;	stepper_xy.c:21: delay_us(STEP_DELAY);
                            599 ;	genCall
                            600 ;	Peephole 182.b	used 16 bit load of dptr
   0035 90 00 11            601 	mov	dptr,#0x0011
   0038 C0 02               602 	push	ar2
   003A C0 03               603 	push	ar3
   003C 12s00r00            604 	lcall	_delay_us
   003F D0 03               605 	pop	ar3
   0041 D0 02               606 	pop	ar2
                            607 ;	stepper_xy.c:22: l--;
                            608 ;	genMinus
                            609 ;	genMinusDec
   0043 1A                  610 	dec	r2
   0044 BA FF 01            611 	cjne	r2,#0xff,00110$
   0047 1B                  612 	dec	r3
   0048                     613 00110$:
                            614 ;	genAssign
   0048 90s00r00            615 	mov	dptr,#_move_left_l_1_1
   004B EA                  616 	mov	a,r2
   004C F0                  617 	movx	@dptr,a
   004D A3                  618 	inc	dptr
   004E EB                  619 	mov	a,r3
   004F F0                  620 	movx	@dptr,a
                            621 ;	Peephole 112.b	changed ljmp to sjmp
   0050 80 C9               622 	sjmp	00101$
   0052                     623 00108$:
                            624 ;	genAssign
   0052 90s00r00            625 	mov	dptr,#_move_left_l_1_1
   0055 EA                  626 	mov	a,r2
   0056 F0                  627 	movx	@dptr,a
   0057 A3                  628 	inc	dptr
   0058 EB                  629 	mov	a,r3
   0059 F0                  630 	movx	@dptr,a
                            631 ;	stepper_xy.c:24: EN1 = 1;
                            632 ;	genAssign
   005A D2 A0               633 	setb	_P2_0
                            634 ;	stepper_xy.c:25: EN2 = 1;
                            635 ;	genAssign
   005C D2 A1               636 	setb	_P2_1
                            637 ;	Peephole 300	removed redundant label 00104$
   005E 22                  638 	ret
                            639 ;------------------------------------------------------------
                            640 ;Allocation info for local variables in function 'move_right'
                            641 ;------------------------------------------------------------
                            642 ;r                         Allocated with name '_move_right_r_1_1'
                            643 ;------------------------------------------------------------
                            644 ;	stepper_xy.c:28: void move_right(unsigned int r)
                            645 ;	-----------------------------------------
                            646 ;	 function move_right
                            647 ;	-----------------------------------------
   005F                     648 _move_right:
                            649 ;	genReceive
   005F AA 83               650 	mov	r2,dph
   0061 E5 82               651 	mov	a,dpl
   0063 90s00r02            652 	mov	dptr,#_move_right_r_1_1
   0066 F0                  653 	movx	@dptr,a
   0067 A3                  654 	inc	dptr
   0068 EA                  655 	mov	a,r2
   0069 F0                  656 	movx	@dptr,a
                            657 ;	stepper_xy.c:30: EN1 = 0;
                            658 ;	genAssign
   006A C2 A0               659 	clr	_P2_0
                            660 ;	stepper_xy.c:31: EN2 = 0;
                            661 ;	genAssign
   006C C2 A1               662 	clr	_P2_1
                            663 ;	stepper_xy.c:33: DR1 = 0;
                            664 ;	genAssign
   006E C2 A3               665 	clr	_P2_3
                            666 ;	stepper_xy.c:34: DR2 = 0;
                            667 ;	genAssign
   0070 C2 A4               668 	clr	_P2_4
                            669 ;	stepper_xy.c:36: while(r>0)
                            670 ;	genAssign
   0072 90s00r02            671 	mov	dptr,#_move_right_r_1_1
   0075 E0                  672 	movx	a,@dptr
   0076 FA                  673 	mov	r2,a
   0077 A3                  674 	inc	dptr
   0078 E0                  675 	movx	a,@dptr
   0079 FB                  676 	mov	r3,a
   007A                     677 00101$:
                            678 ;	genIfx
   007A EA                  679 	mov	a,r2
   007B 4B                  680 	orl	a,r3
                            681 ;	genIfxJump
                            682 ;	Peephole 108.c	removed ljmp by inverse jump logic
   007C 60 33               683 	jz	00108$
                            684 ;	Peephole 300	removed redundant label 00109$
                            685 ;	stepper_xy.c:38: STEPPER_STEP1=0;
                            686 ;	genAssign
   007E C2 90               687 	clr	_P1_0
                            688 ;	stepper_xy.c:39: STEPPER_STEP2=0;
                            689 ;	genAssign
   0080 C2 94               690 	clr	_P1_4
                            691 ;	stepper_xy.c:40: delay_us(STEP_DELAY);
                            692 ;	genCall
                            693 ;	Peephole 182.b	used 16 bit load of dptr
   0082 90 00 11            694 	mov	dptr,#0x0011
   0085 C0 02               695 	push	ar2
   0087 C0 03               696 	push	ar3
   0089 12s00r00            697 	lcall	_delay_us
   008C D0 03               698 	pop	ar3
   008E D0 02               699 	pop	ar2
                            700 ;	stepper_xy.c:41: STEPPER_STEP1=1;
                            701 ;	genAssign
   0090 D2 90               702 	setb	_P1_0
                            703 ;	stepper_xy.c:42: STEPPER_STEP2=1;
                            704 ;	genAssign
   0092 D2 94               705 	setb	_P1_4
                            706 ;	stepper_xy.c:43: delay_us(STEP_DELAY);
                            707 ;	genCall
                            708 ;	Peephole 182.b	used 16 bit load of dptr
   0094 90 00 11            709 	mov	dptr,#0x0011
   0097 C0 02               710 	push	ar2
   0099 C0 03               711 	push	ar3
   009B 12s00r00            712 	lcall	_delay_us
   009E D0 03               713 	pop	ar3
   00A0 D0 02               714 	pop	ar2
                            715 ;	stepper_xy.c:44: r--;
                            716 ;	genMinus
                            717 ;	genMinusDec
   00A2 1A                  718 	dec	r2
   00A3 BA FF 01            719 	cjne	r2,#0xff,00110$
   00A6 1B                  720 	dec	r3
   00A7                     721 00110$:
                            722 ;	genAssign
   00A7 90s00r02            723 	mov	dptr,#_move_right_r_1_1
   00AA EA                  724 	mov	a,r2
   00AB F0                  725 	movx	@dptr,a
   00AC A3                  726 	inc	dptr
   00AD EB                  727 	mov	a,r3
   00AE F0                  728 	movx	@dptr,a
                            729 ;	Peephole 112.b	changed ljmp to sjmp
   00AF 80 C9               730 	sjmp	00101$
   00B1                     731 00108$:
                            732 ;	genAssign
   00B1 90s00r02            733 	mov	dptr,#_move_right_r_1_1
   00B4 EA                  734 	mov	a,r2
   00B5 F0                  735 	movx	@dptr,a
   00B6 A3                  736 	inc	dptr
   00B7 EB                  737 	mov	a,r3
   00B8 F0                  738 	movx	@dptr,a
                            739 ;	stepper_xy.c:46: EN1 = 1;
                            740 ;	genAssign
   00B9 D2 A0               741 	setb	_P2_0
                            742 ;	stepper_xy.c:47: EN2 = 1;
                            743 ;	genAssign
   00BB D2 A1               744 	setb	_P2_1
                            745 ;	Peephole 300	removed redundant label 00104$
   00BD 22                  746 	ret
                            747 ;------------------------------------------------------------
                            748 ;Allocation info for local variables in function 'move_down_right'
                            749 ;------------------------------------------------------------
                            750 ;dr                        Allocated with name '_move_down_right_dr_1_1'
                            751 ;------------------------------------------------------------
                            752 ;	stepper_xy.c:50: void move_down_right(unsigned int dr)
                            753 ;	-----------------------------------------
                            754 ;	 function move_down_right
                            755 ;	-----------------------------------------
   00BE                     756 _move_down_right:
                            757 ;	genReceive
   00BE AA 83               758 	mov	r2,dph
   00C0 E5 82               759 	mov	a,dpl
   00C2 90s00r04            760 	mov	dptr,#_move_down_right_dr_1_1
   00C5 F0                  761 	movx	@dptr,a
   00C6 A3                  762 	inc	dptr
   00C7 EA                  763 	mov	a,r2
   00C8 F0                  764 	movx	@dptr,a
                            765 ;	stepper_xy.c:52: while(dr>0)
                            766 ;	genAssign
   00C9 90s00r04            767 	mov	dptr,#_move_down_right_dr_1_1
   00CC E0                  768 	movx	a,@dptr
   00CD FA                  769 	mov	r2,a
   00CE A3                  770 	inc	dptr
   00CF E0                  771 	movx	a,@dptr
   00D0 FB                  772 	mov	r3,a
   00D1                     773 00101$:
                            774 ;	genIfx
   00D1 EA                  775 	mov	a,r2
   00D2 4B                  776 	orl	a,r3
                            777 ;	genIfxJump
                            778 ;	Peephole 108.c	removed ljmp by inverse jump logic
   00D3 60 2B               779 	jz	00108$
                            780 ;	Peephole 300	removed redundant label 00109$
                            781 ;	stepper_xy.c:54: move_down(STEPS_PER_UNIT);
                            782 ;	genCall
                            783 ;	Peephole 182.b	used 16 bit load of dptr
   00D5 90 00 19            784 	mov	dptr,#0x0019
   00D8 C0 02               785 	push	ar2
   00DA C0 03               786 	push	ar3
   00DC 12s0Er05            787 	lcall	_move_down
   00DF D0 03               788 	pop	ar3
   00E1 D0 02               789 	pop	ar2
                            790 ;	stepper_xy.c:55: move_right(STEPS_PER_UNIT);
                            791 ;	genCall
                            792 ;	Peephole 182.b	used 16 bit load of dptr
   00E3 90 00 19            793 	mov	dptr,#0x0019
   00E6 C0 02               794 	push	ar2
   00E8 C0 03               795 	push	ar3
   00EA 12s00r5F            796 	lcall	_move_right
   00ED D0 03               797 	pop	ar3
   00EF D0 02               798 	pop	ar2
                            799 ;	stepper_xy.c:56: dr--;
                            800 ;	genMinus
                            801 ;	genMinusDec
   00F1 1A                  802 	dec	r2
   00F2 BA FF 01            803 	cjne	r2,#0xff,00110$
   00F5 1B                  804 	dec	r3
   00F6                     805 00110$:
                            806 ;	genAssign
   00F6 90s00r04            807 	mov	dptr,#_move_down_right_dr_1_1
   00F9 EA                  808 	mov	a,r2
   00FA F0                  809 	movx	@dptr,a
   00FB A3                  810 	inc	dptr
   00FC EB                  811 	mov	a,r3
   00FD F0                  812 	movx	@dptr,a
                            813 ;	Peephole 112.b	changed ljmp to sjmp
   00FE 80 D1               814 	sjmp	00101$
   0100                     815 00108$:
                            816 ;	genAssign
   0100 90s00r04            817 	mov	dptr,#_move_down_right_dr_1_1
   0103 EA                  818 	mov	a,r2
   0104 F0                  819 	movx	@dptr,a
   0105 A3                  820 	inc	dptr
   0106 EB                  821 	mov	a,r3
   0107 F0                  822 	movx	@dptr,a
                            823 ;	Peephole 300	removed redundant label 00104$
   0108 22                  824 	ret
                            825 ;------------------------------------------------------------
                            826 ;Allocation info for local variables in function 'move_up_right'
                            827 ;------------------------------------------------------------
                            828 ;dr                        Allocated with name '_move_up_right_dr_1_1'
                            829 ;------------------------------------------------------------
                            830 ;	stepper_xy.c:59: void move_up_right(unsigned int dr)
                            831 ;	-----------------------------------------
                            832 ;	 function move_up_right
                            833 ;	-----------------------------------------
   0109                     834 _move_up_right:
                            835 ;	genReceive
   0109 AA 83               836 	mov	r2,dph
   010B E5 82               837 	mov	a,dpl
   010D 90s00r06            838 	mov	dptr,#_move_up_right_dr_1_1
   0110 F0                  839 	movx	@dptr,a
   0111 A3                  840 	inc	dptr
   0112 EA                  841 	mov	a,r2
   0113 F0                  842 	movx	@dptr,a
                            843 ;	stepper_xy.c:61: while(dr>0)
                            844 ;	genAssign
   0114 90s00r06            845 	mov	dptr,#_move_up_right_dr_1_1
   0117 E0                  846 	movx	a,@dptr
   0118 FA                  847 	mov	r2,a
   0119 A3                  848 	inc	dptr
   011A E0                  849 	movx	a,@dptr
   011B FB                  850 	mov	r3,a
   011C                     851 00101$:
                            852 ;	genIfx
   011C EA                  853 	mov	a,r2
   011D 4B                  854 	orl	a,r3
                            855 ;	genIfxJump
                            856 ;	Peephole 108.c	removed ljmp by inverse jump logic
   011E 60 2B               857 	jz	00108$
                            858 ;	Peephole 300	removed redundant label 00109$
                            859 ;	stepper_xy.c:63: move_up(STEPS_PER_UNIT);
                            860 ;	genCall
                            861 ;	Peephole 182.b	used 16 bit load of dptr
   0120 90 00 19            862 	mov	dptr,#0x0019
   0123 C0 02               863 	push	ar2
   0125 C0 03               864 	push	ar3
   0127 12s0DrA6            865 	lcall	_move_up
   012A D0 03               866 	pop	ar3
   012C D0 02               867 	pop	ar2
                            868 ;	stepper_xy.c:64: move_right(STEPS_PER_UNIT);
                            869 ;	genCall
                            870 ;	Peephole 182.b	used 16 bit load of dptr
   012E 90 00 19            871 	mov	dptr,#0x0019
   0131 C0 02               872 	push	ar2
   0133 C0 03               873 	push	ar3
   0135 12s00r5F            874 	lcall	_move_right
   0138 D0 03               875 	pop	ar3
   013A D0 02               876 	pop	ar2
                            877 ;	stepper_xy.c:65: dr--;
                            878 ;	genMinus
                            879 ;	genMinusDec
   013C 1A                  880 	dec	r2
   013D BA FF 01            881 	cjne	r2,#0xff,00110$
   0140 1B                  882 	dec	r3
   0141                     883 00110$:
                            884 ;	genAssign
   0141 90s00r06            885 	mov	dptr,#_move_up_right_dr_1_1
   0144 EA                  886 	mov	a,r2
   0145 F0                  887 	movx	@dptr,a
   0146 A3                  888 	inc	dptr
   0147 EB                  889 	mov	a,r3
   0148 F0                  890 	movx	@dptr,a
                            891 ;	Peephole 112.b	changed ljmp to sjmp
   0149 80 D1               892 	sjmp	00101$
   014B                     893 00108$:
                            894 ;	genAssign
   014B 90s00r06            895 	mov	dptr,#_move_up_right_dr_1_1
   014E EA                  896 	mov	a,r2
   014F F0                  897 	movx	@dptr,a
   0150 A3                  898 	inc	dptr
   0151 EB                  899 	mov	a,r3
   0152 F0                  900 	movx	@dptr,a
                            901 ;	Peephole 300	removed redundant label 00104$
   0153 22                  902 	ret
                            903 ;------------------------------------------------------------
                            904 ;Allocation info for local variables in function 'move_down_left'
                            905 ;------------------------------------------------------------
                            906 ;dr                        Allocated with name '_move_down_left_dr_1_1'
                            907 ;------------------------------------------------------------
                            908 ;	stepper_xy.c:68: void move_down_left(unsigned int dr)
                            909 ;	-----------------------------------------
                            910 ;	 function move_down_left
                            911 ;	-----------------------------------------
   0154                     912 _move_down_left:
                            913 ;	genReceive
   0154 AA 83               914 	mov	r2,dph
   0156 E5 82               915 	mov	a,dpl
   0158 90s00r08            916 	mov	dptr,#_move_down_left_dr_1_1
   015B F0                  917 	movx	@dptr,a
   015C A3                  918 	inc	dptr
   015D EA                  919 	mov	a,r2
   015E F0                  920 	movx	@dptr,a
                            921 ;	stepper_xy.c:70: while(dr>0)
                            922 ;	genAssign
   015F 90s00r08            923 	mov	dptr,#_move_down_left_dr_1_1
   0162 E0                  924 	movx	a,@dptr
   0163 FA                  925 	mov	r2,a
   0164 A3                  926 	inc	dptr
   0165 E0                  927 	movx	a,@dptr
   0166 FB                  928 	mov	r3,a
   0167                     929 00101$:
                            930 ;	genIfx
   0167 EA                  931 	mov	a,r2
   0168 4B                  932 	orl	a,r3
                            933 ;	genIfxJump
                            934 ;	Peephole 108.c	removed ljmp by inverse jump logic
   0169 60 2B               935 	jz	00108$
                            936 ;	Peephole 300	removed redundant label 00109$
                            937 ;	stepper_xy.c:72: move_down(STEPS_PER_UNIT);
                            938 ;	genCall
                            939 ;	Peephole 182.b	used 16 bit load of dptr
   016B 90 00 19            940 	mov	dptr,#0x0019
   016E C0 02               941 	push	ar2
   0170 C0 03               942 	push	ar3
   0172 12s0Er05            943 	lcall	_move_down
   0175 D0 03               944 	pop	ar3
   0177 D0 02               945 	pop	ar2
                            946 ;	stepper_xy.c:73: move_left(STEPS_PER_UNIT);
                            947 ;	genCall
                            948 ;	Peephole 182.b	used 16 bit load of dptr
   0179 90 00 19            949 	mov	dptr,#0x0019
   017C C0 02               950 	push	ar2
   017E C0 03               951 	push	ar3
   0180 12s00r00            952 	lcall	_move_left
   0183 D0 03               953 	pop	ar3
   0185 D0 02               954 	pop	ar2
                            955 ;	stepper_xy.c:74: dr--;
                            956 ;	genMinus
                            957 ;	genMinusDec
   0187 1A                  958 	dec	r2
   0188 BA FF 01            959 	cjne	r2,#0xff,00110$
   018B 1B                  960 	dec	r3
   018C                     961 00110$:
                            962 ;	genAssign
   018C 90s00r08            963 	mov	dptr,#_move_down_left_dr_1_1
   018F EA                  964 	mov	a,r2
   0190 F0                  965 	movx	@dptr,a
   0191 A3                  966 	inc	dptr
   0192 EB                  967 	mov	a,r3
   0193 F0                  968 	movx	@dptr,a
                            969 ;	Peephole 112.b	changed ljmp to sjmp
   0194 80 D1               970 	sjmp	00101$
   0196                     971 00108$:
                            972 ;	genAssign
   0196 90s00r08            973 	mov	dptr,#_move_down_left_dr_1_1
   0199 EA                  974 	mov	a,r2
   019A F0                  975 	movx	@dptr,a
   019B A3                  976 	inc	dptr
   019C EB                  977 	mov	a,r3
   019D F0                  978 	movx	@dptr,a
                            979 ;	Peephole 300	removed redundant label 00104$
   019E 22                  980 	ret
                            981 ;------------------------------------------------------------
                            982 ;Allocation info for local variables in function 'move_up_left'
                            983 ;------------------------------------------------------------
                            984 ;dr                        Allocated with name '_move_up_left_dr_1_1'
                            985 ;------------------------------------------------------------
                            986 ;	stepper_xy.c:78: void move_up_left(unsigned int dr)
                            987 ;	-----------------------------------------
                            988 ;	 function move_up_left
                            989 ;	-----------------------------------------
   019F                     990 _move_up_left:
                            991 ;	genReceive
   019F AA 83               992 	mov	r2,dph
   01A1 E5 82               993 	mov	a,dpl
   01A3 90s00r0A            994 	mov	dptr,#_move_up_left_dr_1_1
   01A6 F0                  995 	movx	@dptr,a
   01A7 A3                  996 	inc	dptr
   01A8 EA                  997 	mov	a,r2
   01A9 F0                  998 	movx	@dptr,a
                            999 ;	stepper_xy.c:80: while(dr>0)
                           1000 ;	genAssign
   01AA 90s00r0A           1001 	mov	dptr,#_move_up_left_dr_1_1
   01AD E0                 1002 	movx	a,@dptr
   01AE FA                 1003 	mov	r2,a
   01AF A3                 1004 	inc	dptr
   01B0 E0                 1005 	movx	a,@dptr
   01B1 FB                 1006 	mov	r3,a
   01B2                    1007 00101$:
                           1008 ;	genIfx
   01B2 EA                 1009 	mov	a,r2
   01B3 4B                 1010 	orl	a,r3
                           1011 ;	genIfxJump
                           1012 ;	Peephole 108.c	removed ljmp by inverse jump logic
   01B4 60 2B              1013 	jz	00108$
                           1014 ;	Peephole 300	removed redundant label 00109$
                           1015 ;	stepper_xy.c:82: move_up(STEPS_PER_UNIT);
                           1016 ;	genCall
                           1017 ;	Peephole 182.b	used 16 bit load of dptr
   01B6 90 00 19           1018 	mov	dptr,#0x0019
   01B9 C0 02              1019 	push	ar2
   01BB C0 03              1020 	push	ar3
   01BD 12s0DrA6           1021 	lcall	_move_up
   01C0 D0 03              1022 	pop	ar3
   01C2 D0 02              1023 	pop	ar2
                           1024 ;	stepper_xy.c:83: move_left(STEPS_PER_UNIT);
                           1025 ;	genCall
                           1026 ;	Peephole 182.b	used 16 bit load of dptr
   01C4 90 00 19           1027 	mov	dptr,#0x0019
   01C7 C0 02              1028 	push	ar2
   01C9 C0 03              1029 	push	ar3
   01CB 12s00r00           1030 	lcall	_move_left
   01CE D0 03              1031 	pop	ar3
   01D0 D0 02              1032 	pop	ar2
                           1033 ;	stepper_xy.c:84: dr--;
                           1034 ;	genMinus
                           1035 ;	genMinusDec
   01D2 1A                 1036 	dec	r2
   01D3 BA FF 01           1037 	cjne	r2,#0xff,00110$
   01D6 1B                 1038 	dec	r3
   01D7                    1039 00110$:
                           1040 ;	genAssign
   01D7 90s00r0A           1041 	mov	dptr,#_move_up_left_dr_1_1
   01DA EA                 1042 	mov	a,r2
   01DB F0                 1043 	movx	@dptr,a
   01DC A3                 1044 	inc	dptr
   01DD EB                 1045 	mov	a,r3
   01DE F0                 1046 	movx	@dptr,a
                           1047 ;	Peephole 112.b	changed ljmp to sjmp
   01DF 80 D1              1048 	sjmp	00101$
   01E1                    1049 00108$:
                           1050 ;	genAssign
   01E1 90s00r0A           1051 	mov	dptr,#_move_up_left_dr_1_1
   01E4 EA                 1052 	mov	a,r2
   01E5 F0                 1053 	movx	@dptr,a
   01E6 A3                 1054 	inc	dptr
   01E7 EB                 1055 	mov	a,r3
   01E8 F0                 1056 	movx	@dptr,a
                           1057 ;	Peephole 300	removed redundant label 00104$
   01E9 22                 1058 	ret
                           1059 ;------------------------------------------------------------
                           1060 ;Allocation info for local variables in function 'top_down_right'
                           1061 ;------------------------------------------------------------
                           1062 ;sloc0                     Allocated with name '_top_down_right_sloc0_1_0'
                           1063 ;sloc1                     Allocated with name '_top_down_right_sloc1_1_0'
                           1064 ;new_steps                 Allocated with name '_top_down_right_new_steps_1_1'
                           1065 ;------------------------------------------------------------
                           1066 ;	stepper_xy.c:87: void top_down_right(float new_steps)
                           1067 ;	-----------------------------------------
                           1068 ;	 function top_down_right
                           1069 ;	-----------------------------------------
   01EA                    1070 _top_down_right:
                           1071 ;	genReceive
   01EA AA 82              1072 	mov	r2,dpl
   01EC AB 83              1073 	mov	r3,dph
   01EE AC F0              1074 	mov	r4,b
   01F0 FD                 1075 	mov	r5,a
   01F1 90s00r0C           1076 	mov	dptr,#_top_down_right_new_steps_1_1
   01F4 EA                 1077 	mov	a,r2
   01F5 F0                 1078 	movx	@dptr,a
   01F6 A3                 1079 	inc	dptr
   01F7 EB                 1080 	mov	a,r3
   01F8 F0                 1081 	movx	@dptr,a
   01F9 A3                 1082 	inc	dptr
   01FA EC                 1083 	mov	a,r4
   01FB F0                 1084 	movx	@dptr,a
   01FC A3                 1085 	inc	dptr
   01FD ED                 1086 	mov	a,r5
   01FE F0                 1087 	movx	@dptr,a
                           1088 ;	stepper_xy.c:89: new_steps= new_steps*STEPS_PER_UNIT_ARC;
                           1089 ;	genAssign
   01FF 90s00r0C           1090 	mov	dptr,#_top_down_right_new_steps_1_1
   0202 E0                 1091 	movx	a,@dptr
   0203 FA                 1092 	mov	r2,a
   0204 A3                 1093 	inc	dptr
   0205 E0                 1094 	movx	a,@dptr
   0206 FB                 1095 	mov	r3,a
   0207 A3                 1096 	inc	dptr
   0208 E0                 1097 	movx	a,@dptr
   0209 FC                 1098 	mov	r4,a
   020A A3                 1099 	inc	dptr
   020B E0                 1100 	movx	a,@dptr
   020C FD                 1101 	mov	r5,a
                           1102 ;	genIpush
                           1103 ;	Peephole 181	changed mov to clr
   020D E4                 1104 	clr	a
   020E C0 E0              1105 	push	acc
   0210 C0 E0              1106 	push	acc
   0212 74 80              1107 	mov	a,#0x80
   0214 C0 E0              1108 	push	acc
   0216 74 40              1109 	mov	a,#0x40
   0218 C0 E0              1110 	push	acc
                           1111 ;	genCall
   021A 8A 82              1112 	mov	dpl,r2
   021C 8B 83              1113 	mov	dph,r3
   021E 8C F0              1114 	mov	b,r4
   0220 ED                 1115 	mov	a,r5
   0221 12s00r00           1116 	lcall	___fsmul
   0224 AA 82              1117 	mov	r2,dpl
   0226 AB 83              1118 	mov	r3,dph
   0228 AC F0              1119 	mov	r4,b
   022A FD                 1120 	mov	r5,a
   022B E5 81              1121 	mov	a,sp
   022D 24 FC              1122 	add	a,#0xfc
   022F F5 81              1123 	mov	sp,a
                           1124 ;	genAssign
   0231 90s00r0C           1125 	mov	dptr,#_top_down_right_new_steps_1_1
   0234 EA                 1126 	mov	a,r2
   0235 F0                 1127 	movx	@dptr,a
   0236 A3                 1128 	inc	dptr
   0237 EB                 1129 	mov	a,r3
   0238 F0                 1130 	movx	@dptr,a
   0239 A3                 1131 	inc	dptr
   023A EC                 1132 	mov	a,r4
   023B F0                 1133 	movx	@dptr,a
   023C A3                 1134 	inc	dptr
   023D ED                 1135 	mov	a,r5
   023E F0                 1136 	movx	@dptr,a
                           1137 ;	stepper_xy.c:90: move_right(4*new_steps);
                           1138 ;	genAssign
   023F 90s00r0C           1139 	mov	dptr,#_top_down_right_new_steps_1_1
   0242 E0                 1140 	movx	a,@dptr
   0243 F5*02              1141 	mov	_top_down_right_sloc1_1_0,a
   0245 A3                 1142 	inc	dptr
   0246 E0                 1143 	movx	a,@dptr
   0247 F5*03              1144 	mov	(_top_down_right_sloc1_1_0 + 1),a
   0249 A3                 1145 	inc	dptr
   024A E0                 1146 	movx	a,@dptr
   024B F5*04              1147 	mov	(_top_down_right_sloc1_1_0 + 2),a
   024D A3                 1148 	inc	dptr
   024E E0                 1149 	movx	a,@dptr
   024F F5*05              1150 	mov	(_top_down_right_sloc1_1_0 + 3),a
                           1151 ;	genIpush
                           1152 ;	Peephole 181	changed mov to clr
   0251 E4                 1153 	clr	a
   0252 C0 E0              1154 	push	acc
   0254 C0 E0              1155 	push	acc
   0256 74 80              1156 	mov	a,#0x80
   0258 C0 E0              1157 	push	acc
   025A 74 40              1158 	mov	a,#0x40
   025C C0 E0              1159 	push	acc
                           1160 ;	genCall
   025E 85*02 82           1161 	mov	dpl,_top_down_right_sloc1_1_0
   0261 85*03 83           1162 	mov	dph,(_top_down_right_sloc1_1_0 + 1)
   0264 85*04 F0           1163 	mov	b,(_top_down_right_sloc1_1_0 + 2)
   0267 E5*05              1164 	mov	a,(_top_down_right_sloc1_1_0 + 3)
   0269 12s00r00           1165 	lcall	___fsmul
   026C AE 82              1166 	mov	r6,dpl
   026E AF 83              1167 	mov	r7,dph
   0270 A8 F0              1168 	mov	r0,b
   0272 F9                 1169 	mov	r1,a
   0273 E5 81              1170 	mov	a,sp
   0275 24 FC              1171 	add	a,#0xfc
   0277 F5 81              1172 	mov	sp,a
                           1173 ;	genCall
   0279 8E 82              1174 	mov	dpl,r6
   027B 8F 83              1175 	mov	dph,r7
   027D 88 F0              1176 	mov	b,r0
   027F E9                 1177 	mov	a,r1
   0280 12s00r00           1178 	lcall	___fs2uint
   0283 85 82*00           1179 	mov	_top_down_right_sloc0_1_0,dpl
   0286 85 83*01           1180 	mov	(_top_down_right_sloc0_1_0 + 1),dph
                           1181 ;	genCall
   0289 85*00 82           1182 	mov	dpl,_top_down_right_sloc0_1_0
   028C 85*01 83           1183 	mov	dph,(_top_down_right_sloc0_1_0 + 1)
   028F 12s00r5F           1184 	lcall	_move_right
                           1185 ;	stepper_xy.c:91: move_down(1*new_steps);
                           1186 ;	genCall
   0292 85*02 82           1187 	mov	dpl,_top_down_right_sloc1_1_0
   0295 85*03 83           1188 	mov	dph,(_top_down_right_sloc1_1_0 + 1)
   0298 85*04 F0           1189 	mov	b,(_top_down_right_sloc1_1_0 + 2)
   029B E5*05              1190 	mov	a,(_top_down_right_sloc1_1_0 + 3)
   029D 12s00r00           1191 	lcall	___fs2uint
                           1192 ;	genCall
   02A0 A8 82              1193 	mov	r0,dpl
                           1194 ;	Peephole 177.d	removed redundant move
   02A2 A9 83              1195 	mov  r1,dph
                           1196 ;	Peephole 177.a	removed redundant mov
   02A4 C0 00              1197 	push	ar0
   02A6 C0 01              1198 	push	ar1
   02A8 12s0Er05           1199 	lcall	_move_down
   02AB D0 01              1200 	pop	ar1
   02AD D0 00              1201 	pop	ar0
                           1202 ;	stepper_xy.c:92: move_right(3*new_steps);
                           1203 ;	genIpush
   02AF C0 00              1204 	push	ar0
   02B1 C0 01              1205 	push	ar1
                           1206 ;	Peephole 181	changed mov to clr
   02B3 E4                 1207 	clr	a
   02B4 C0 E0              1208 	push	acc
   02B6 C0 E0              1209 	push	acc
   02B8 74 40              1210 	mov	a,#0x40
   02BA C0 E0              1211 	push	acc
   02BC C0 E0              1212 	push	acc
                           1213 ;	genCall
   02BE 85*02 82           1214 	mov	dpl,_top_down_right_sloc1_1_0
   02C1 85*03 83           1215 	mov	dph,(_top_down_right_sloc1_1_0 + 1)
   02C4 85*04 F0           1216 	mov	b,(_top_down_right_sloc1_1_0 + 2)
   02C7 E5*05              1217 	mov	a,(_top_down_right_sloc1_1_0 + 3)
   02C9 12s00r00           1218 	lcall	___fsmul
   02CC AE 82              1219 	mov	r6,dpl
   02CE AF 83              1220 	mov	r7,dph
   02D0 AA F0              1221 	mov	r2,b
   02D2 FB                 1222 	mov	r3,a
   02D3 E5 81              1223 	mov	a,sp
   02D5 24 FC              1224 	add	a,#0xfc
   02D7 F5 81              1225 	mov	sp,a
   02D9 D0 01              1226 	pop	ar1
   02DB D0 00              1227 	pop	ar0
                           1228 ;	genCall
   02DD 8E 82              1229 	mov	dpl,r6
   02DF 8F 83              1230 	mov	dph,r7
   02E1 8A F0              1231 	mov	b,r2
   02E3 EB                 1232 	mov	a,r3
   02E4 C0 00              1233 	push	ar0
   02E6 C0 01              1234 	push	ar1
   02E8 12s00r00           1235 	lcall	___fs2uint
   02EB AA 82              1236 	mov	r2,dpl
   02ED AB 83              1237 	mov	r3,dph
   02EF D0 01              1238 	pop	ar1
   02F1 D0 00              1239 	pop	ar0
                           1240 ;	genCall
   02F3 8A 82              1241 	mov	dpl,r2
   02F5 8B 83              1242 	mov	dph,r3
   02F7 C0 02              1243 	push	ar2
   02F9 C0 03              1244 	push	ar3
   02FB C0 00              1245 	push	ar0
   02FD C0 01              1246 	push	ar1
   02FF 12s00r5F           1247 	lcall	_move_right
   0302 D0 01              1248 	pop	ar1
   0304 D0 00              1249 	pop	ar0
   0306 D0 03              1250 	pop	ar3
   0308 D0 02              1251 	pop	ar2
                           1252 ;	stepper_xy.c:93: move_down(1*new_steps);
                           1253 ;	genCall
   030A 88 82              1254 	mov	dpl,r0
   030C 89 83              1255 	mov	dph,r1
   030E C0 02              1256 	push	ar2
   0310 C0 03              1257 	push	ar3
   0312 C0 00              1258 	push	ar0
   0314 C0 01              1259 	push	ar1
   0316 12s0Er05           1260 	lcall	_move_down
   0319 D0 01              1261 	pop	ar1
   031B D0 00              1262 	pop	ar0
   031D D0 03              1263 	pop	ar3
   031F D0 02              1264 	pop	ar2
                           1265 ;	stepper_xy.c:94: move_right(2*new_steps);
                           1266 ;	genIpush
   0321 C0 02              1267 	push	ar2
   0323 C0 03              1268 	push	ar3
   0325 C0 00              1269 	push	ar0
   0327 C0 01              1270 	push	ar1
                           1271 ;	Peephole 181	changed mov to clr
   0329 E4                 1272 	clr	a
   032A C0 E0              1273 	push	acc
   032C C0 E0              1274 	push	acc
   032E C0 E0              1275 	push	acc
   0330 74 40              1276 	mov	a,#0x40
   0332 C0 E0              1277 	push	acc
                           1278 ;	genCall
   0334 85*02 82           1279 	mov	dpl,_top_down_right_sloc1_1_0
   0337 85*03 83           1280 	mov	dph,(_top_down_right_sloc1_1_0 + 1)
   033A 85*04 F0           1281 	mov	b,(_top_down_right_sloc1_1_0 + 2)
   033D E5*05              1282 	mov	a,(_top_down_right_sloc1_1_0 + 3)
   033F 12s00r00           1283 	lcall	___fsmul
   0342 AC 82              1284 	mov	r4,dpl
   0344 AD 83              1285 	mov	r5,dph
   0346 AE F0              1286 	mov	r6,b
   0348 FF                 1287 	mov	r7,a
   0349 E5 81              1288 	mov	a,sp
   034B 24 FC              1289 	add	a,#0xfc
   034D F5 81              1290 	mov	sp,a
   034F D0 01              1291 	pop	ar1
   0351 D0 00              1292 	pop	ar0
   0353 D0 03              1293 	pop	ar3
   0355 D0 02              1294 	pop	ar2
                           1295 ;	genCall
   0357 8C 82              1296 	mov	dpl,r4
   0359 8D 83              1297 	mov	dph,r5
   035B 8E F0              1298 	mov	b,r6
   035D EF                 1299 	mov	a,r7
   035E C0 02              1300 	push	ar2
   0360 C0 03              1301 	push	ar3
   0362 C0 00              1302 	push	ar0
   0364 C0 01              1303 	push	ar1
   0366 12s00r00           1304 	lcall	___fs2uint
   0369 AC 82              1305 	mov	r4,dpl
   036B AD 83              1306 	mov	r5,dph
   036D D0 01              1307 	pop	ar1
   036F D0 00              1308 	pop	ar0
   0371 D0 03              1309 	pop	ar3
   0373 D0 02              1310 	pop	ar2
                           1311 ;	genCall
   0375 8C 82              1312 	mov	dpl,r4
   0377 8D 83              1313 	mov	dph,r5
   0379 C0 02              1314 	push	ar2
   037B C0 03              1315 	push	ar3
   037D C0 04              1316 	push	ar4
   037F C0 05              1317 	push	ar5
   0381 C0 00              1318 	push	ar0
   0383 C0 01              1319 	push	ar1
   0385 12s00r5F           1320 	lcall	_move_right
   0388 D0 01              1321 	pop	ar1
   038A D0 00              1322 	pop	ar0
   038C D0 05              1323 	pop	ar5
   038E D0 04              1324 	pop	ar4
   0390 D0 03              1325 	pop	ar3
   0392 D0 02              1326 	pop	ar2
                           1327 ;	stepper_xy.c:95: move_down(1*new_steps);
                           1328 ;	genCall
   0394 88 82              1329 	mov	dpl,r0
   0396 89 83              1330 	mov	dph,r1
   0398 C0 02              1331 	push	ar2
   039A C0 03              1332 	push	ar3
   039C C0 04              1333 	push	ar4
   039E C0 05              1334 	push	ar5
   03A0 C0 00              1335 	push	ar0
   03A2 C0 01              1336 	push	ar1
   03A4 12s0Er05           1337 	lcall	_move_down
   03A7 D0 01              1338 	pop	ar1
   03A9 D0 00              1339 	pop	ar0
   03AB D0 05              1340 	pop	ar5
   03AD D0 04              1341 	pop	ar4
   03AF D0 03              1342 	pop	ar3
   03B1 D0 02              1343 	pop	ar2
                           1344 ;	stepper_xy.c:96: move_right(2*new_steps);
                           1345 ;	genCall
   03B3 8C 82              1346 	mov	dpl,r4
   03B5 8D 83              1347 	mov	dph,r5
   03B7 C0 02              1348 	push	ar2
   03B9 C0 03              1349 	push	ar3
   03BB C0 04              1350 	push	ar4
   03BD C0 05              1351 	push	ar5
   03BF C0 00              1352 	push	ar0
   03C1 C0 01              1353 	push	ar1
   03C3 12s00r5F           1354 	lcall	_move_right
   03C6 D0 01              1355 	pop	ar1
   03C8 D0 00              1356 	pop	ar0
   03CA D0 05              1357 	pop	ar5
   03CC D0 04              1358 	pop	ar4
   03CE D0 03              1359 	pop	ar3
   03D0 D0 02              1360 	pop	ar2
                           1361 ;	stepper_xy.c:97: move_down(1*new_steps);
                           1362 ;	genCall
   03D2 88 82              1363 	mov	dpl,r0
   03D4 89 83              1364 	mov	dph,r1
   03D6 C0 02              1365 	push	ar2
   03D8 C0 03              1366 	push	ar3
   03DA C0 04              1367 	push	ar4
   03DC C0 05              1368 	push	ar5
   03DE C0 00              1369 	push	ar0
   03E0 C0 01              1370 	push	ar1
   03E2 12s0Er05           1371 	lcall	_move_down
   03E5 D0 01              1372 	pop	ar1
   03E7 D0 00              1373 	pop	ar0
   03E9 D0 05              1374 	pop	ar5
   03EB D0 04              1375 	pop	ar4
   03ED D0 03              1376 	pop	ar3
   03EF D0 02              1377 	pop	ar2
                           1378 ;	stepper_xy.c:98: move_right(1*new_steps);
                           1379 ;	genCall
   03F1 88 82              1380 	mov	dpl,r0
   03F3 89 83              1381 	mov	dph,r1
   03F5 C0 02              1382 	push	ar2
   03F7 C0 03              1383 	push	ar3
   03F9 C0 04              1384 	push	ar4
   03FB C0 05              1385 	push	ar5
   03FD C0 00              1386 	push	ar0
   03FF C0 01              1387 	push	ar1
   0401 12s00r5F           1388 	lcall	_move_right
   0404 D0 01              1389 	pop	ar1
   0406 D0 00              1390 	pop	ar0
   0408 D0 05              1391 	pop	ar5
   040A D0 04              1392 	pop	ar4
   040C D0 03              1393 	pop	ar3
   040E D0 02              1394 	pop	ar2
                           1395 ;	stepper_xy.c:99: move_down(1*new_steps);
                           1396 ;	genCall
   0410 88 82              1397 	mov	dpl,r0
   0412 89 83              1398 	mov	dph,r1
   0414 C0 02              1399 	push	ar2
   0416 C0 03              1400 	push	ar3
   0418 C0 04              1401 	push	ar4
   041A C0 05              1402 	push	ar5
   041C C0 00              1403 	push	ar0
   041E C0 01              1404 	push	ar1
   0420 12s0Er05           1405 	lcall	_move_down
   0423 D0 01              1406 	pop	ar1
   0425 D0 00              1407 	pop	ar0
   0427 D0 05              1408 	pop	ar5
   0429 D0 04              1409 	pop	ar4
   042B D0 03              1410 	pop	ar3
   042D D0 02              1411 	pop	ar2
                           1412 ;	stepper_xy.c:100: move_right(1*new_steps);
                           1413 ;	genCall
   042F 88 82              1414 	mov	dpl,r0
   0431 89 83              1415 	mov	dph,r1
   0433 C0 02              1416 	push	ar2
   0435 C0 03              1417 	push	ar3
   0437 C0 04              1418 	push	ar4
   0439 C0 05              1419 	push	ar5
   043B C0 00              1420 	push	ar0
   043D C0 01              1421 	push	ar1
   043F 12s00r5F           1422 	lcall	_move_right
   0442 D0 01              1423 	pop	ar1
   0444 D0 00              1424 	pop	ar0
   0446 D0 05              1425 	pop	ar5
   0448 D0 04              1426 	pop	ar4
   044A D0 03              1427 	pop	ar3
   044C D0 02              1428 	pop	ar2
                           1429 ;	stepper_xy.c:101: move_down(1*new_steps);
                           1430 ;	genCall
   044E 88 82              1431 	mov	dpl,r0
   0450 89 83              1432 	mov	dph,r1
   0452 C0 02              1433 	push	ar2
   0454 C0 03              1434 	push	ar3
   0456 C0 04              1435 	push	ar4
   0458 C0 05              1436 	push	ar5
   045A C0 00              1437 	push	ar0
   045C C0 01              1438 	push	ar1
   045E 12s0Er05           1439 	lcall	_move_down
   0461 D0 01              1440 	pop	ar1
   0463 D0 00              1441 	pop	ar0
   0465 D0 05              1442 	pop	ar5
   0467 D0 04              1443 	pop	ar4
   0469 D0 03              1444 	pop	ar3
   046B D0 02              1445 	pop	ar2
                           1446 ;	stepper_xy.c:102: move_right(1*new_steps);
                           1447 ;	genCall
   046D 88 82              1448 	mov	dpl,r0
   046F 89 83              1449 	mov	dph,r1
   0471 C0 02              1450 	push	ar2
   0473 C0 03              1451 	push	ar3
   0475 C0 04              1452 	push	ar4
   0477 C0 05              1453 	push	ar5
   0479 C0 00              1454 	push	ar0
   047B C0 01              1455 	push	ar1
   047D 12s00r5F           1456 	lcall	_move_right
   0480 D0 01              1457 	pop	ar1
   0482 D0 00              1458 	pop	ar0
   0484 D0 05              1459 	pop	ar5
   0486 D0 04              1460 	pop	ar4
   0488 D0 03              1461 	pop	ar3
   048A D0 02              1462 	pop	ar2
                           1463 ;	stepper_xy.c:103: move_down(2*new_steps);
                           1464 ;	genCall
   048C 8C 82              1465 	mov	dpl,r4
   048E 8D 83              1466 	mov	dph,r5
   0490 C0 02              1467 	push	ar2
   0492 C0 03              1468 	push	ar3
   0494 C0 00              1469 	push	ar0
   0496 C0 01              1470 	push	ar1
   0498 12s0Er05           1471 	lcall	_move_down
   049B D0 01              1472 	pop	ar1
   049D D0 00              1473 	pop	ar0
   049F D0 03              1474 	pop	ar3
   04A1 D0 02              1475 	pop	ar2
                           1476 ;	stepper_xy.c:104: move_right(1*new_steps);
                           1477 ;	genCall
   04A3 88 82              1478 	mov	dpl,r0
   04A5 89 83              1479 	mov	dph,r1
   04A7 C0 02              1480 	push	ar2
   04A9 C0 03              1481 	push	ar3
   04AB C0 00              1482 	push	ar0
   04AD C0 01              1483 	push	ar1
   04AF 12s00r5F           1484 	lcall	_move_right
   04B2 D0 01              1485 	pop	ar1
   04B4 D0 00              1486 	pop	ar0
   04B6 D0 03              1487 	pop	ar3
   04B8 D0 02              1488 	pop	ar2
                           1489 ;	stepper_xy.c:105: move_down(3*new_steps);
                           1490 ;	genCall
   04BA 8A 82              1491 	mov	dpl,r2
   04BC 8B 83              1492 	mov	dph,r3
   04BE C0 00              1493 	push	ar0
   04C0 C0 01              1494 	push	ar1
   04C2 12s0Er05           1495 	lcall	_move_down
   04C5 D0 01              1496 	pop	ar1
   04C7 D0 00              1497 	pop	ar0
                           1498 ;	stepper_xy.c:106: move_right(1*new_steps);
                           1499 ;	genCall
   04C9 88 82              1500 	mov	dpl,r0
   04CB 89 83              1501 	mov	dph,r1
   04CD 12s00r5F           1502 	lcall	_move_right
                           1503 ;	stepper_xy.c:107: move_down(4*new_steps);
                           1504 ;	genCall
   04D0 85*00 82           1505 	mov	dpl,_top_down_right_sloc0_1_0
   04D3 85*01 83           1506 	mov	dph,(_top_down_right_sloc0_1_0 + 1)
                           1507 ;	Peephole 253.b	replaced lcall/ret with ljmp
   04D6 02s0Er05           1508 	ljmp	_move_down
                           1509 ;
                           1510 ;------------------------------------------------------------
                           1511 ;Allocation info for local variables in function 'right_down_left'
                           1512 ;------------------------------------------------------------
                           1513 ;sloc0                     Allocated with name '_right_down_left_sloc0_1_0'
                           1514 ;sloc1                     Allocated with name '_right_down_left_sloc1_1_0'
                           1515 ;new_steps                 Allocated with name '_right_down_left_new_steps_1_1'
                           1516 ;------------------------------------------------------------
                           1517 ;	stepper_xy.c:110: void right_down_left(float new_steps)
                           1518 ;	-----------------------------------------
                           1519 ;	 function right_down_left
                           1520 ;	-----------------------------------------
   04D9                    1521 _right_down_left:
                           1522 ;	genReceive
   04D9 AA 82              1523 	mov	r2,dpl
   04DB AB 83              1524 	mov	r3,dph
   04DD AC F0              1525 	mov	r4,b
   04DF FD                 1526 	mov	r5,a
   04E0 90s00r10           1527 	mov	dptr,#_right_down_left_new_steps_1_1
   04E3 EA                 1528 	mov	a,r2
   04E4 F0                 1529 	movx	@dptr,a
   04E5 A3                 1530 	inc	dptr
   04E6 EB                 1531 	mov	a,r3
   04E7 F0                 1532 	movx	@dptr,a
   04E8 A3                 1533 	inc	dptr
   04E9 EC                 1534 	mov	a,r4
   04EA F0                 1535 	movx	@dptr,a
   04EB A3                 1536 	inc	dptr
   04EC ED                 1537 	mov	a,r5
   04ED F0                 1538 	movx	@dptr,a
                           1539 ;	stepper_xy.c:112: new_steps= new_steps*STEPS_PER_UNIT_ARC;
                           1540 ;	genAssign
   04EE 90s00r10           1541 	mov	dptr,#_right_down_left_new_steps_1_1
   04F1 E0                 1542 	movx	a,@dptr
   04F2 FA                 1543 	mov	r2,a
   04F3 A3                 1544 	inc	dptr
   04F4 E0                 1545 	movx	a,@dptr
   04F5 FB                 1546 	mov	r3,a
   04F6 A3                 1547 	inc	dptr
   04F7 E0                 1548 	movx	a,@dptr
   04F8 FC                 1549 	mov	r4,a
   04F9 A3                 1550 	inc	dptr
   04FA E0                 1551 	movx	a,@dptr
   04FB FD                 1552 	mov	r5,a
                           1553 ;	genIpush
                           1554 ;	Peephole 181	changed mov to clr
   04FC E4                 1555 	clr	a
   04FD C0 E0              1556 	push	acc
   04FF C0 E0              1557 	push	acc
   0501 74 80              1558 	mov	a,#0x80
   0503 C0 E0              1559 	push	acc
   0505 74 40              1560 	mov	a,#0x40
   0507 C0 E0              1561 	push	acc
                           1562 ;	genCall
   0509 8A 82              1563 	mov	dpl,r2
   050B 8B 83              1564 	mov	dph,r3
   050D 8C F0              1565 	mov	b,r4
   050F ED                 1566 	mov	a,r5
   0510 12s00r00           1567 	lcall	___fsmul
   0513 AA 82              1568 	mov	r2,dpl
   0515 AB 83              1569 	mov	r3,dph
   0517 AC F0              1570 	mov	r4,b
   0519 FD                 1571 	mov	r5,a
   051A E5 81              1572 	mov	a,sp
   051C 24 FC              1573 	add	a,#0xfc
   051E F5 81              1574 	mov	sp,a
                           1575 ;	genAssign
   0520 90s00r10           1576 	mov	dptr,#_right_down_left_new_steps_1_1
   0523 EA                 1577 	mov	a,r2
   0524 F0                 1578 	movx	@dptr,a
   0525 A3                 1579 	inc	dptr
   0526 EB                 1580 	mov	a,r3
   0527 F0                 1581 	movx	@dptr,a
   0528 A3                 1582 	inc	dptr
   0529 EC                 1583 	mov	a,r4
   052A F0                 1584 	movx	@dptr,a
   052B A3                 1585 	inc	dptr
   052C ED                 1586 	mov	a,r5
   052D F0                 1587 	movx	@dptr,a
                           1588 ;	stepper_xy.c:113: move_down(4*new_steps);
                           1589 ;	genAssign
   052E 90s00r10           1590 	mov	dptr,#_right_down_left_new_steps_1_1
   0531 E0                 1591 	movx	a,@dptr
   0532 F5*08              1592 	mov	_right_down_left_sloc1_1_0,a
   0534 A3                 1593 	inc	dptr
   0535 E0                 1594 	movx	a,@dptr
   0536 F5*09              1595 	mov	(_right_down_left_sloc1_1_0 + 1),a
   0538 A3                 1596 	inc	dptr
   0539 E0                 1597 	movx	a,@dptr
   053A F5*0A              1598 	mov	(_right_down_left_sloc1_1_0 + 2),a
   053C A3                 1599 	inc	dptr
   053D E0                 1600 	movx	a,@dptr
   053E F5*0B              1601 	mov	(_right_down_left_sloc1_1_0 + 3),a
                           1602 ;	genIpush
                           1603 ;	Peephole 181	changed mov to clr
   0540 E4                 1604 	clr	a
   0541 C0 E0              1605 	push	acc
   0543 C0 E0              1606 	push	acc
   0545 74 80              1607 	mov	a,#0x80
   0547 C0 E0              1608 	push	acc
   0549 74 40              1609 	mov	a,#0x40
   054B C0 E0              1610 	push	acc
                           1611 ;	genCall
   054D 85*08 82           1612 	mov	dpl,_right_down_left_sloc1_1_0
   0550 85*09 83           1613 	mov	dph,(_right_down_left_sloc1_1_0 + 1)
   0553 85*0A F0           1614 	mov	b,(_right_down_left_sloc1_1_0 + 2)
   0556 E5*0B              1615 	mov	a,(_right_down_left_sloc1_1_0 + 3)
   0558 12s00r00           1616 	lcall	___fsmul
   055B AE 82              1617 	mov	r6,dpl
   055D AF 83              1618 	mov	r7,dph
   055F A8 F0              1619 	mov	r0,b
   0561 F9                 1620 	mov	r1,a
   0562 E5 81              1621 	mov	a,sp
   0564 24 FC              1622 	add	a,#0xfc
   0566 F5 81              1623 	mov	sp,a
                           1624 ;	genCall
   0568 8E 82              1625 	mov	dpl,r6
   056A 8F 83              1626 	mov	dph,r7
   056C 88 F0              1627 	mov	b,r0
   056E E9                 1628 	mov	a,r1
   056F 12s00r00           1629 	lcall	___fs2uint
   0572 85 82*06           1630 	mov	_right_down_left_sloc0_1_0,dpl
   0575 85 83*07           1631 	mov	(_right_down_left_sloc0_1_0 + 1),dph
                           1632 ;	genCall
   0578 85*06 82           1633 	mov	dpl,_right_down_left_sloc0_1_0
   057B 85*07 83           1634 	mov	dph,(_right_down_left_sloc0_1_0 + 1)
   057E 12s0Er05           1635 	lcall	_move_down
                           1636 ;	stepper_xy.c:114: move_left(1*new_steps);
                           1637 ;	genCall
   0581 85*08 82           1638 	mov	dpl,_right_down_left_sloc1_1_0
   0584 85*09 83           1639 	mov	dph,(_right_down_left_sloc1_1_0 + 1)
   0587 85*0A F0           1640 	mov	b,(_right_down_left_sloc1_1_0 + 2)
   058A E5*0B              1641 	mov	a,(_right_down_left_sloc1_1_0 + 3)
   058C 12s00r00           1642 	lcall	___fs2uint
                           1643 ;	genCall
   058F A8 82              1644 	mov	r0,dpl
                           1645 ;	Peephole 177.d	removed redundant move
   0591 A9 83              1646 	mov  r1,dph
                           1647 ;	Peephole 177.a	removed redundant mov
   0593 C0 00              1648 	push	ar0
   0595 C0 01              1649 	push	ar1
   0597 12s00r00           1650 	lcall	_move_left
   059A D0 01              1651 	pop	ar1
   059C D0 00              1652 	pop	ar0
                           1653 ;	stepper_xy.c:115: move_down(3*new_steps);
                           1654 ;	genIpush
   059E C0 00              1655 	push	ar0
   05A0 C0 01              1656 	push	ar1
                           1657 ;	Peephole 181	changed mov to clr
   05A2 E4                 1658 	clr	a
   05A3 C0 E0              1659 	push	acc
   05A5 C0 E0              1660 	push	acc
   05A7 74 40              1661 	mov	a,#0x40
   05A9 C0 E0              1662 	push	acc
   05AB C0 E0              1663 	push	acc
                           1664 ;	genCall
   05AD 85*08 82           1665 	mov	dpl,_right_down_left_sloc1_1_0
   05B0 85*09 83           1666 	mov	dph,(_right_down_left_sloc1_1_0 + 1)
   05B3 85*0A F0           1667 	mov	b,(_right_down_left_sloc1_1_0 + 2)
   05B6 E5*0B              1668 	mov	a,(_right_down_left_sloc1_1_0 + 3)
   05B8 12s00r00           1669 	lcall	___fsmul
   05BB AE 82              1670 	mov	r6,dpl
   05BD AF 83              1671 	mov	r7,dph
   05BF AA F0              1672 	mov	r2,b
   05C1 FB                 1673 	mov	r3,a
   05C2 E5 81              1674 	mov	a,sp
   05C4 24 FC              1675 	add	a,#0xfc
   05C6 F5 81              1676 	mov	sp,a
   05C8 D0 01              1677 	pop	ar1
   05CA D0 00              1678 	pop	ar0
                           1679 ;	genCall
   05CC 8E 82              1680 	mov	dpl,r6
   05CE 8F 83              1681 	mov	dph,r7
   05D0 8A F0              1682 	mov	b,r2
   05D2 EB                 1683 	mov	a,r3
   05D3 C0 00              1684 	push	ar0
   05D5 C0 01              1685 	push	ar1
   05D7 12s00r00           1686 	lcall	___fs2uint
   05DA AA 82              1687 	mov	r2,dpl
   05DC AB 83              1688 	mov	r3,dph
   05DE D0 01              1689 	pop	ar1
   05E0 D0 00              1690 	pop	ar0
                           1691 ;	genCall
   05E2 8A 82              1692 	mov	dpl,r2
   05E4 8B 83              1693 	mov	dph,r3
   05E6 C0 02              1694 	push	ar2
   05E8 C0 03              1695 	push	ar3
   05EA C0 00              1696 	push	ar0
   05EC C0 01              1697 	push	ar1
   05EE 12s0Er05           1698 	lcall	_move_down
   05F1 D0 01              1699 	pop	ar1
   05F3 D0 00              1700 	pop	ar0
   05F5 D0 03              1701 	pop	ar3
   05F7 D0 02              1702 	pop	ar2
                           1703 ;	stepper_xy.c:116: move_left(1*new_steps);
                           1704 ;	genCall
   05F9 88 82              1705 	mov	dpl,r0
   05FB 89 83              1706 	mov	dph,r1
   05FD C0 02              1707 	push	ar2
   05FF C0 03              1708 	push	ar3
   0601 C0 00              1709 	push	ar0
   0603 C0 01              1710 	push	ar1
   0605 12s00r00           1711 	lcall	_move_left
   0608 D0 01              1712 	pop	ar1
   060A D0 00              1713 	pop	ar0
   060C D0 03              1714 	pop	ar3
   060E D0 02              1715 	pop	ar2
                           1716 ;	stepper_xy.c:117: move_down(2*new_steps);
                           1717 ;	genIpush
   0610 C0 02              1718 	push	ar2
   0612 C0 03              1719 	push	ar3
   0614 C0 00              1720 	push	ar0
   0616 C0 01              1721 	push	ar1
                           1722 ;	Peephole 181	changed mov to clr
   0618 E4                 1723 	clr	a
   0619 C0 E0              1724 	push	acc
   061B C0 E0              1725 	push	acc
   061D C0 E0              1726 	push	acc
   061F 74 40              1727 	mov	a,#0x40
   0621 C0 E0              1728 	push	acc
                           1729 ;	genCall
   0623 85*08 82           1730 	mov	dpl,_right_down_left_sloc1_1_0
   0626 85*09 83           1731 	mov	dph,(_right_down_left_sloc1_1_0 + 1)
   0629 85*0A F0           1732 	mov	b,(_right_down_left_sloc1_1_0 + 2)
   062C E5*0B              1733 	mov	a,(_right_down_left_sloc1_1_0 + 3)
   062E 12s00r00           1734 	lcall	___fsmul
   0631 AC 82              1735 	mov	r4,dpl
   0633 AD 83              1736 	mov	r5,dph
   0635 AE F0              1737 	mov	r6,b
   0637 FF                 1738 	mov	r7,a
   0638 E5 81              1739 	mov	a,sp
   063A 24 FC              1740 	add	a,#0xfc
   063C F5 81              1741 	mov	sp,a
   063E D0 01              1742 	pop	ar1
   0640 D0 00              1743 	pop	ar0
   0642 D0 03              1744 	pop	ar3
   0644 D0 02              1745 	pop	ar2
                           1746 ;	genCall
   0646 8C 82              1747 	mov	dpl,r4
   0648 8D 83              1748 	mov	dph,r5
   064A 8E F0              1749 	mov	b,r6
   064C EF                 1750 	mov	a,r7
   064D C0 02              1751 	push	ar2
   064F C0 03              1752 	push	ar3
   0651 C0 00              1753 	push	ar0
   0653 C0 01              1754 	push	ar1
   0655 12s00r00           1755 	lcall	___fs2uint
   0658 AC 82              1756 	mov	r4,dpl
   065A AD 83              1757 	mov	r5,dph
   065C D0 01              1758 	pop	ar1
   065E D0 00              1759 	pop	ar0
   0660 D0 03              1760 	pop	ar3
   0662 D0 02              1761 	pop	ar2
                           1762 ;	genCall
   0664 8C 82              1763 	mov	dpl,r4
   0666 8D 83              1764 	mov	dph,r5
   0668 C0 02              1765 	push	ar2
   066A C0 03              1766 	push	ar3
   066C C0 04              1767 	push	ar4
   066E C0 05              1768 	push	ar5
   0670 C0 00              1769 	push	ar0
   0672 C0 01              1770 	push	ar1
   0674 12s0Er05           1771 	lcall	_move_down
   0677 D0 01              1772 	pop	ar1
   0679 D0 00              1773 	pop	ar0
   067B D0 05              1774 	pop	ar5
   067D D0 04              1775 	pop	ar4
   067F D0 03              1776 	pop	ar3
   0681 D0 02              1777 	pop	ar2
                           1778 ;	stepper_xy.c:118: move_left(1*new_steps);
                           1779 ;	genCall
   0683 88 82              1780 	mov	dpl,r0
   0685 89 83              1781 	mov	dph,r1
   0687 C0 02              1782 	push	ar2
   0689 C0 03              1783 	push	ar3
   068B C0 04              1784 	push	ar4
   068D C0 05              1785 	push	ar5
   068F C0 00              1786 	push	ar0
   0691 C0 01              1787 	push	ar1
   0693 12s00r00           1788 	lcall	_move_left
   0696 D0 01              1789 	pop	ar1
   0698 D0 00              1790 	pop	ar0
   069A D0 05              1791 	pop	ar5
   069C D0 04              1792 	pop	ar4
   069E D0 03              1793 	pop	ar3
   06A0 D0 02              1794 	pop	ar2
                           1795 ;	stepper_xy.c:119: move_down(2*new_steps);
                           1796 ;	genCall
   06A2 8C 82              1797 	mov	dpl,r4
   06A4 8D 83              1798 	mov	dph,r5
   06A6 C0 02              1799 	push	ar2
   06A8 C0 03              1800 	push	ar3
   06AA C0 04              1801 	push	ar4
   06AC C0 05              1802 	push	ar5
   06AE C0 00              1803 	push	ar0
   06B0 C0 01              1804 	push	ar1
   06B2 12s0Er05           1805 	lcall	_move_down
   06B5 D0 01              1806 	pop	ar1
   06B7 D0 00              1807 	pop	ar0
   06B9 D0 05              1808 	pop	ar5
   06BB D0 04              1809 	pop	ar4
   06BD D0 03              1810 	pop	ar3
   06BF D0 02              1811 	pop	ar2
                           1812 ;	stepper_xy.c:120: move_left(1*new_steps);
                           1813 ;	genCall
   06C1 88 82              1814 	mov	dpl,r0
   06C3 89 83              1815 	mov	dph,r1
   06C5 C0 02              1816 	push	ar2
   06C7 C0 03              1817 	push	ar3
   06C9 C0 04              1818 	push	ar4
   06CB C0 05              1819 	push	ar5
   06CD C0 00              1820 	push	ar0
   06CF C0 01              1821 	push	ar1
   06D1 12s00r00           1822 	lcall	_move_left
   06D4 D0 01              1823 	pop	ar1
   06D6 D0 00              1824 	pop	ar0
   06D8 D0 05              1825 	pop	ar5
   06DA D0 04              1826 	pop	ar4
   06DC D0 03              1827 	pop	ar3
   06DE D0 02              1828 	pop	ar2
                           1829 ;	stepper_xy.c:121: move_down(1*new_steps);
                           1830 ;	genCall
   06E0 88 82              1831 	mov	dpl,r0
   06E2 89 83              1832 	mov	dph,r1
   06E4 C0 02              1833 	push	ar2
   06E6 C0 03              1834 	push	ar3
   06E8 C0 04              1835 	push	ar4
   06EA C0 05              1836 	push	ar5
   06EC C0 00              1837 	push	ar0
   06EE C0 01              1838 	push	ar1
   06F0 12s0Er05           1839 	lcall	_move_down
   06F3 D0 01              1840 	pop	ar1
   06F5 D0 00              1841 	pop	ar0
   06F7 D0 05              1842 	pop	ar5
   06F9 D0 04              1843 	pop	ar4
   06FB D0 03              1844 	pop	ar3
   06FD D0 02              1845 	pop	ar2
                           1846 ;	stepper_xy.c:122: move_left(1*new_steps);
                           1847 ;	genCall
   06FF 88 82              1848 	mov	dpl,r0
   0701 89 83              1849 	mov	dph,r1
   0703 C0 02              1850 	push	ar2
   0705 C0 03              1851 	push	ar3
   0707 C0 04              1852 	push	ar4
   0709 C0 05              1853 	push	ar5
   070B C0 00              1854 	push	ar0
   070D C0 01              1855 	push	ar1
   070F 12s00r00           1856 	lcall	_move_left
   0712 D0 01              1857 	pop	ar1
   0714 D0 00              1858 	pop	ar0
   0716 D0 05              1859 	pop	ar5
   0718 D0 04              1860 	pop	ar4
   071A D0 03              1861 	pop	ar3
   071C D0 02              1862 	pop	ar2
                           1863 ;	stepper_xy.c:123: move_down(1*new_steps);
                           1864 ;	genCall
   071E 88 82              1865 	mov	dpl,r0
   0720 89 83              1866 	mov	dph,r1
   0722 C0 02              1867 	push	ar2
   0724 C0 03              1868 	push	ar3
   0726 C0 04              1869 	push	ar4
   0728 C0 05              1870 	push	ar5
   072A C0 00              1871 	push	ar0
   072C C0 01              1872 	push	ar1
   072E 12s0Er05           1873 	lcall	_move_down
   0731 D0 01              1874 	pop	ar1
   0733 D0 00              1875 	pop	ar0
   0735 D0 05              1876 	pop	ar5
   0737 D0 04              1877 	pop	ar4
   0739 D0 03              1878 	pop	ar3
   073B D0 02              1879 	pop	ar2
                           1880 ;	stepper_xy.c:124: move_left(1*new_steps);
                           1881 ;	genCall
   073D 88 82              1882 	mov	dpl,r0
   073F 89 83              1883 	mov	dph,r1
   0741 C0 02              1884 	push	ar2
   0743 C0 03              1885 	push	ar3
   0745 C0 04              1886 	push	ar4
   0747 C0 05              1887 	push	ar5
   0749 C0 00              1888 	push	ar0
   074B C0 01              1889 	push	ar1
   074D 12s00r00           1890 	lcall	_move_left
   0750 D0 01              1891 	pop	ar1
   0752 D0 00              1892 	pop	ar0
   0754 D0 05              1893 	pop	ar5
   0756 D0 04              1894 	pop	ar4
   0758 D0 03              1895 	pop	ar3
   075A D0 02              1896 	pop	ar2
                           1897 ;	stepper_xy.c:125: move_down(1*new_steps);
                           1898 ;	genCall
   075C 88 82              1899 	mov	dpl,r0
   075E 89 83              1900 	mov	dph,r1
   0760 C0 02              1901 	push	ar2
   0762 C0 03              1902 	push	ar3
   0764 C0 04              1903 	push	ar4
   0766 C0 05              1904 	push	ar5
   0768 C0 00              1905 	push	ar0
   076A C0 01              1906 	push	ar1
   076C 12s0Er05           1907 	lcall	_move_down
   076F D0 01              1908 	pop	ar1
   0771 D0 00              1909 	pop	ar0
   0773 D0 05              1910 	pop	ar5
   0775 D0 04              1911 	pop	ar4
   0777 D0 03              1912 	pop	ar3
   0779 D0 02              1913 	pop	ar2
                           1914 ;	stepper_xy.c:126: move_left(2*new_steps);
                           1915 ;	genCall
   077B 8C 82              1916 	mov	dpl,r4
   077D 8D 83              1917 	mov	dph,r5
   077F C0 02              1918 	push	ar2
   0781 C0 03              1919 	push	ar3
   0783 C0 00              1920 	push	ar0
   0785 C0 01              1921 	push	ar1
   0787 12s00r00           1922 	lcall	_move_left
   078A D0 01              1923 	pop	ar1
   078C D0 00              1924 	pop	ar0
   078E D0 03              1925 	pop	ar3
   0790 D0 02              1926 	pop	ar2
                           1927 ;	stepper_xy.c:127: move_down(1*new_steps);
                           1928 ;	genCall
   0792 88 82              1929 	mov	dpl,r0
   0794 89 83              1930 	mov	dph,r1
   0796 C0 02              1931 	push	ar2
   0798 C0 03              1932 	push	ar3
   079A C0 00              1933 	push	ar0
   079C C0 01              1934 	push	ar1
   079E 12s0Er05           1935 	lcall	_move_down
   07A1 D0 01              1936 	pop	ar1
   07A3 D0 00              1937 	pop	ar0
   07A5 D0 03              1938 	pop	ar3
   07A7 D0 02              1939 	pop	ar2
                           1940 ;	stepper_xy.c:128: move_left(3*new_steps);
                           1941 ;	genCall
   07A9 8A 82              1942 	mov	dpl,r2
   07AB 8B 83              1943 	mov	dph,r3
   07AD C0 00              1944 	push	ar0
   07AF C0 01              1945 	push	ar1
   07B1 12s00r00           1946 	lcall	_move_left
   07B4 D0 01              1947 	pop	ar1
   07B6 D0 00              1948 	pop	ar0
                           1949 ;	stepper_xy.c:129: move_down(1*new_steps);
                           1950 ;	genCall
   07B8 88 82              1951 	mov	dpl,r0
   07BA 89 83              1952 	mov	dph,r1
   07BC 12s0Er05           1953 	lcall	_move_down
                           1954 ;	stepper_xy.c:130: move_left(4*new_steps);
                           1955 ;	genCall
   07BF 85*06 82           1956 	mov	dpl,_right_down_left_sloc0_1_0
   07C2 85*07 83           1957 	mov	dph,(_right_down_left_sloc0_1_0 + 1)
                           1958 ;	Peephole 253.b	replaced lcall/ret with ljmp
   07C5 02s00r00           1959 	ljmp	_move_left
                           1960 ;
                           1961 ;------------------------------------------------------------
                           1962 ;Allocation info for local variables in function 'down_up_left'
                           1963 ;------------------------------------------------------------
                           1964 ;sloc0                     Allocated with name '_down_up_left_sloc0_1_0'
                           1965 ;sloc1                     Allocated with name '_down_up_left_sloc1_1_0'
                           1966 ;new_steps                 Allocated with name '_down_up_left_new_steps_1_1'
                           1967 ;------------------------------------------------------------
                           1968 ;	stepper_xy.c:132: void down_up_left(float new_steps)
                           1969 ;	-----------------------------------------
                           1970 ;	 function down_up_left
                           1971 ;	-----------------------------------------
   07C8                    1972 _down_up_left:
                           1973 ;	genReceive
   07C8 AA 82              1974 	mov	r2,dpl
   07CA AB 83              1975 	mov	r3,dph
   07CC AC F0              1976 	mov	r4,b
   07CE FD                 1977 	mov	r5,a
   07CF 90s00r14           1978 	mov	dptr,#_down_up_left_new_steps_1_1
   07D2 EA                 1979 	mov	a,r2
   07D3 F0                 1980 	movx	@dptr,a
   07D4 A3                 1981 	inc	dptr
   07D5 EB                 1982 	mov	a,r3
   07D6 F0                 1983 	movx	@dptr,a
   07D7 A3                 1984 	inc	dptr
   07D8 EC                 1985 	mov	a,r4
   07D9 F0                 1986 	movx	@dptr,a
   07DA A3                 1987 	inc	dptr
   07DB ED                 1988 	mov	a,r5
   07DC F0                 1989 	movx	@dptr,a
                           1990 ;	stepper_xy.c:134: new_steps= new_steps*STEPS_PER_UNIT_ARC;
                           1991 ;	genAssign
   07DD 90s00r14           1992 	mov	dptr,#_down_up_left_new_steps_1_1
   07E0 E0                 1993 	movx	a,@dptr
   07E1 FA                 1994 	mov	r2,a
   07E2 A3                 1995 	inc	dptr
   07E3 E0                 1996 	movx	a,@dptr
   07E4 FB                 1997 	mov	r3,a
   07E5 A3                 1998 	inc	dptr
   07E6 E0                 1999 	movx	a,@dptr
   07E7 FC                 2000 	mov	r4,a
   07E8 A3                 2001 	inc	dptr
   07E9 E0                 2002 	movx	a,@dptr
   07EA FD                 2003 	mov	r5,a
                           2004 ;	genIpush
                           2005 ;	Peephole 181	changed mov to clr
   07EB E4                 2006 	clr	a
   07EC C0 E0              2007 	push	acc
   07EE C0 E0              2008 	push	acc
   07F0 74 80              2009 	mov	a,#0x80
   07F2 C0 E0              2010 	push	acc
   07F4 74 40              2011 	mov	a,#0x40
   07F6 C0 E0              2012 	push	acc
                           2013 ;	genCall
   07F8 8A 82              2014 	mov	dpl,r2
   07FA 8B 83              2015 	mov	dph,r3
   07FC 8C F0              2016 	mov	b,r4
   07FE ED                 2017 	mov	a,r5
   07FF 12s00r00           2018 	lcall	___fsmul
   0802 AA 82              2019 	mov	r2,dpl
   0804 AB 83              2020 	mov	r3,dph
   0806 AC F0              2021 	mov	r4,b
   0808 FD                 2022 	mov	r5,a
   0809 E5 81              2023 	mov	a,sp
   080B 24 FC              2024 	add	a,#0xfc
   080D F5 81              2025 	mov	sp,a
                           2026 ;	genAssign
   080F 90s00r14           2027 	mov	dptr,#_down_up_left_new_steps_1_1
   0812 EA                 2028 	mov	a,r2
   0813 F0                 2029 	movx	@dptr,a
   0814 A3                 2030 	inc	dptr
   0815 EB                 2031 	mov	a,r3
   0816 F0                 2032 	movx	@dptr,a
   0817 A3                 2033 	inc	dptr
   0818 EC                 2034 	mov	a,r4
   0819 F0                 2035 	movx	@dptr,a
   081A A3                 2036 	inc	dptr
   081B ED                 2037 	mov	a,r5
   081C F0                 2038 	movx	@dptr,a
                           2039 ;	stepper_xy.c:135: move_left(4*new_steps);
                           2040 ;	genAssign
   081D 90s00r14           2041 	mov	dptr,#_down_up_left_new_steps_1_1
   0820 E0                 2042 	movx	a,@dptr
   0821 F5*0E              2043 	mov	_down_up_left_sloc1_1_0,a
   0823 A3                 2044 	inc	dptr
   0824 E0                 2045 	movx	a,@dptr
   0825 F5*0F              2046 	mov	(_down_up_left_sloc1_1_0 + 1),a
   0827 A3                 2047 	inc	dptr
   0828 E0                 2048 	movx	a,@dptr
   0829 F5*10              2049 	mov	(_down_up_left_sloc1_1_0 + 2),a
   082B A3                 2050 	inc	dptr
   082C E0                 2051 	movx	a,@dptr
   082D F5*11              2052 	mov	(_down_up_left_sloc1_1_0 + 3),a
                           2053 ;	genIpush
                           2054 ;	Peephole 181	changed mov to clr
   082F E4                 2055 	clr	a
   0830 C0 E0              2056 	push	acc
   0832 C0 E0              2057 	push	acc
   0834 74 80              2058 	mov	a,#0x80
   0836 C0 E0              2059 	push	acc
   0838 74 40              2060 	mov	a,#0x40
   083A C0 E0              2061 	push	acc
                           2062 ;	genCall
   083C 85*0E 82           2063 	mov	dpl,_down_up_left_sloc1_1_0
   083F 85*0F 83           2064 	mov	dph,(_down_up_left_sloc1_1_0 + 1)
   0842 85*10 F0           2065 	mov	b,(_down_up_left_sloc1_1_0 + 2)
   0845 E5*11              2066 	mov	a,(_down_up_left_sloc1_1_0 + 3)
   0847 12s00r00           2067 	lcall	___fsmul
   084A AE 82              2068 	mov	r6,dpl
   084C AF 83              2069 	mov	r7,dph
   084E A8 F0              2070 	mov	r0,b
   0850 F9                 2071 	mov	r1,a
   0851 E5 81              2072 	mov	a,sp
   0853 24 FC              2073 	add	a,#0xfc
   0855 F5 81              2074 	mov	sp,a
                           2075 ;	genCall
   0857 8E 82              2076 	mov	dpl,r6
   0859 8F 83              2077 	mov	dph,r7
   085B 88 F0              2078 	mov	b,r0
   085D E9                 2079 	mov	a,r1
   085E 12s00r00           2080 	lcall	___fs2uint
   0861 85 82*0C           2081 	mov	_down_up_left_sloc0_1_0,dpl
   0864 85 83*0D           2082 	mov	(_down_up_left_sloc0_1_0 + 1),dph
                           2083 ;	genCall
   0867 85*0C 82           2084 	mov	dpl,_down_up_left_sloc0_1_0
   086A 85*0D 83           2085 	mov	dph,(_down_up_left_sloc0_1_0 + 1)
   086D 12s00r00           2086 	lcall	_move_left
                           2087 ;	stepper_xy.c:136: move_up(1*new_steps);
                           2088 ;	genCall
   0870 85*0E 82           2089 	mov	dpl,_down_up_left_sloc1_1_0
   0873 85*0F 83           2090 	mov	dph,(_down_up_left_sloc1_1_0 + 1)
   0876 85*10 F0           2091 	mov	b,(_down_up_left_sloc1_1_0 + 2)
   0879 E5*11              2092 	mov	a,(_down_up_left_sloc1_1_0 + 3)
   087B 12s00r00           2093 	lcall	___fs2uint
                           2094 ;	genCall
   087E A8 82              2095 	mov	r0,dpl
                           2096 ;	Peephole 177.d	removed redundant move
   0880 A9 83              2097 	mov  r1,dph
                           2098 ;	Peephole 177.a	removed redundant mov
   0882 C0 00              2099 	push	ar0
   0884 C0 01              2100 	push	ar1
   0886 12s0DrA6           2101 	lcall	_move_up
   0889 D0 01              2102 	pop	ar1
   088B D0 00              2103 	pop	ar0
                           2104 ;	stepper_xy.c:137: move_left(3*new_steps);
                           2105 ;	genIpush
   088D C0 00              2106 	push	ar0
   088F C0 01              2107 	push	ar1
                           2108 ;	Peephole 181	changed mov to clr
   0891 E4                 2109 	clr	a
   0892 C0 E0              2110 	push	acc
   0894 C0 E0              2111 	push	acc
   0896 74 40              2112 	mov	a,#0x40
   0898 C0 E0              2113 	push	acc
   089A C0 E0              2114 	push	acc
                           2115 ;	genCall
   089C 85*0E 82           2116 	mov	dpl,_down_up_left_sloc1_1_0
   089F 85*0F 83           2117 	mov	dph,(_down_up_left_sloc1_1_0 + 1)
   08A2 85*10 F0           2118 	mov	b,(_down_up_left_sloc1_1_0 + 2)
   08A5 E5*11              2119 	mov	a,(_down_up_left_sloc1_1_0 + 3)
   08A7 12s00r00           2120 	lcall	___fsmul
   08AA AE 82              2121 	mov	r6,dpl
   08AC AF 83              2122 	mov	r7,dph
   08AE AA F0              2123 	mov	r2,b
   08B0 FB                 2124 	mov	r3,a
   08B1 E5 81              2125 	mov	a,sp
   08B3 24 FC              2126 	add	a,#0xfc
   08B5 F5 81              2127 	mov	sp,a
   08B7 D0 01              2128 	pop	ar1
   08B9 D0 00              2129 	pop	ar0
                           2130 ;	genCall
   08BB 8E 82              2131 	mov	dpl,r6
   08BD 8F 83              2132 	mov	dph,r7
   08BF 8A F0              2133 	mov	b,r2
   08C1 EB                 2134 	mov	a,r3
   08C2 C0 00              2135 	push	ar0
   08C4 C0 01              2136 	push	ar1
   08C6 12s00r00           2137 	lcall	___fs2uint
   08C9 AA 82              2138 	mov	r2,dpl
   08CB AB 83              2139 	mov	r3,dph
   08CD D0 01              2140 	pop	ar1
   08CF D0 00              2141 	pop	ar0
                           2142 ;	genCall
   08D1 8A 82              2143 	mov	dpl,r2
   08D3 8B 83              2144 	mov	dph,r3
   08D5 C0 02              2145 	push	ar2
   08D7 C0 03              2146 	push	ar3
   08D9 C0 00              2147 	push	ar0
   08DB C0 01              2148 	push	ar1
   08DD 12s00r00           2149 	lcall	_move_left
   08E0 D0 01              2150 	pop	ar1
   08E2 D0 00              2151 	pop	ar0
   08E4 D0 03              2152 	pop	ar3
   08E6 D0 02              2153 	pop	ar2
                           2154 ;	stepper_xy.c:138: move_up(1*new_steps);
                           2155 ;	genCall
   08E8 88 82              2156 	mov	dpl,r0
   08EA 89 83              2157 	mov	dph,r1
   08EC C0 02              2158 	push	ar2
   08EE C0 03              2159 	push	ar3
   08F0 C0 00              2160 	push	ar0
   08F2 C0 01              2161 	push	ar1
   08F4 12s0DrA6           2162 	lcall	_move_up
   08F7 D0 01              2163 	pop	ar1
   08F9 D0 00              2164 	pop	ar0
   08FB D0 03              2165 	pop	ar3
   08FD D0 02              2166 	pop	ar2
                           2167 ;	stepper_xy.c:139: move_left(2*new_steps);
                           2168 ;	genIpush
   08FF C0 02              2169 	push	ar2
   0901 C0 03              2170 	push	ar3
   0903 C0 00              2171 	push	ar0
   0905 C0 01              2172 	push	ar1
                           2173 ;	Peephole 181	changed mov to clr
   0907 E4                 2174 	clr	a
   0908 C0 E0              2175 	push	acc
   090A C0 E0              2176 	push	acc
   090C C0 E0              2177 	push	acc
   090E 74 40              2178 	mov	a,#0x40
   0910 C0 E0              2179 	push	acc
                           2180 ;	genCall
   0912 85*0E 82           2181 	mov	dpl,_down_up_left_sloc1_1_0
   0915 85*0F 83           2182 	mov	dph,(_down_up_left_sloc1_1_0 + 1)
   0918 85*10 F0           2183 	mov	b,(_down_up_left_sloc1_1_0 + 2)
   091B E5*11              2184 	mov	a,(_down_up_left_sloc1_1_0 + 3)
   091D 12s00r00           2185 	lcall	___fsmul
   0920 AC 82              2186 	mov	r4,dpl
   0922 AD 83              2187 	mov	r5,dph
   0924 AE F0              2188 	mov	r6,b
   0926 FF                 2189 	mov	r7,a
   0927 E5 81              2190 	mov	a,sp
   0929 24 FC              2191 	add	a,#0xfc
   092B F5 81              2192 	mov	sp,a
   092D D0 01              2193 	pop	ar1
   092F D0 00              2194 	pop	ar0
   0931 D0 03              2195 	pop	ar3
   0933 D0 02              2196 	pop	ar2
                           2197 ;	genCall
   0935 8C 82              2198 	mov	dpl,r4
   0937 8D 83              2199 	mov	dph,r5
   0939 8E F0              2200 	mov	b,r6
   093B EF                 2201 	mov	a,r7
   093C C0 02              2202 	push	ar2
   093E C0 03              2203 	push	ar3
   0940 C0 00              2204 	push	ar0
   0942 C0 01              2205 	push	ar1
   0944 12s00r00           2206 	lcall	___fs2uint
   0947 AC 82              2207 	mov	r4,dpl
   0949 AD 83              2208 	mov	r5,dph
   094B D0 01              2209 	pop	ar1
   094D D0 00              2210 	pop	ar0
   094F D0 03              2211 	pop	ar3
   0951 D0 02              2212 	pop	ar2
                           2213 ;	genCall
   0953 8C 82              2214 	mov	dpl,r4
   0955 8D 83              2215 	mov	dph,r5
   0957 C0 02              2216 	push	ar2
   0959 C0 03              2217 	push	ar3
   095B C0 04              2218 	push	ar4
   095D C0 05              2219 	push	ar5
   095F C0 00              2220 	push	ar0
   0961 C0 01              2221 	push	ar1
   0963 12s00r00           2222 	lcall	_move_left
   0966 D0 01              2223 	pop	ar1
   0968 D0 00              2224 	pop	ar0
   096A D0 05              2225 	pop	ar5
   096C D0 04              2226 	pop	ar4
   096E D0 03              2227 	pop	ar3
   0970 D0 02              2228 	pop	ar2
                           2229 ;	stepper_xy.c:140: move_up(1*new_steps);
                           2230 ;	genCall
   0972 88 82              2231 	mov	dpl,r0
   0974 89 83              2232 	mov	dph,r1
   0976 C0 02              2233 	push	ar2
   0978 C0 03              2234 	push	ar3
   097A C0 04              2235 	push	ar4
   097C C0 05              2236 	push	ar5
   097E C0 00              2237 	push	ar0
   0980 C0 01              2238 	push	ar1
   0982 12s0DrA6           2239 	lcall	_move_up
   0985 D0 01              2240 	pop	ar1
   0987 D0 00              2241 	pop	ar0
   0989 D0 05              2242 	pop	ar5
   098B D0 04              2243 	pop	ar4
   098D D0 03              2244 	pop	ar3
   098F D0 02              2245 	pop	ar2
                           2246 ;	stepper_xy.c:141: move_left(2*new_steps);
                           2247 ;	genCall
   0991 8C 82              2248 	mov	dpl,r4
   0993 8D 83              2249 	mov	dph,r5
   0995 C0 02              2250 	push	ar2
   0997 C0 03              2251 	push	ar3
   0999 C0 04              2252 	push	ar4
   099B C0 05              2253 	push	ar5
   099D C0 00              2254 	push	ar0
   099F C0 01              2255 	push	ar1
   09A1 12s00r00           2256 	lcall	_move_left
   09A4 D0 01              2257 	pop	ar1
   09A6 D0 00              2258 	pop	ar0
   09A8 D0 05              2259 	pop	ar5
   09AA D0 04              2260 	pop	ar4
   09AC D0 03              2261 	pop	ar3
   09AE D0 02              2262 	pop	ar2
                           2263 ;	stepper_xy.c:142: move_up(1*new_steps);
                           2264 ;	genCall
   09B0 88 82              2265 	mov	dpl,r0
   09B2 89 83              2266 	mov	dph,r1
   09B4 C0 02              2267 	push	ar2
   09B6 C0 03              2268 	push	ar3
   09B8 C0 04              2269 	push	ar4
   09BA C0 05              2270 	push	ar5
   09BC C0 00              2271 	push	ar0
   09BE C0 01              2272 	push	ar1
   09C0 12s0DrA6           2273 	lcall	_move_up
   09C3 D0 01              2274 	pop	ar1
   09C5 D0 00              2275 	pop	ar0
   09C7 D0 05              2276 	pop	ar5
   09C9 D0 04              2277 	pop	ar4
   09CB D0 03              2278 	pop	ar3
   09CD D0 02              2279 	pop	ar2
                           2280 ;	stepper_xy.c:143: move_left(1*new_steps);
                           2281 ;	genCall
   09CF 88 82              2282 	mov	dpl,r0
   09D1 89 83              2283 	mov	dph,r1
   09D3 C0 02              2284 	push	ar2
   09D5 C0 03              2285 	push	ar3
   09D7 C0 04              2286 	push	ar4
   09D9 C0 05              2287 	push	ar5
   09DB C0 00              2288 	push	ar0
   09DD C0 01              2289 	push	ar1
   09DF 12s00r00           2290 	lcall	_move_left
   09E2 D0 01              2291 	pop	ar1
   09E4 D0 00              2292 	pop	ar0
   09E6 D0 05              2293 	pop	ar5
   09E8 D0 04              2294 	pop	ar4
   09EA D0 03              2295 	pop	ar3
   09EC D0 02              2296 	pop	ar2
                           2297 ;	stepper_xy.c:144: move_up(1*new_steps);
                           2298 ;	genCall
   09EE 88 82              2299 	mov	dpl,r0
   09F0 89 83              2300 	mov	dph,r1
   09F2 C0 02              2301 	push	ar2
   09F4 C0 03              2302 	push	ar3
   09F6 C0 04              2303 	push	ar4
   09F8 C0 05              2304 	push	ar5
   09FA C0 00              2305 	push	ar0
   09FC C0 01              2306 	push	ar1
   09FE 12s0DrA6           2307 	lcall	_move_up
   0A01 D0 01              2308 	pop	ar1
   0A03 D0 00              2309 	pop	ar0
   0A05 D0 05              2310 	pop	ar5
   0A07 D0 04              2311 	pop	ar4
   0A09 D0 03              2312 	pop	ar3
   0A0B D0 02              2313 	pop	ar2
                           2314 ;	stepper_xy.c:145: move_left(1*new_steps);
                           2315 ;	genCall
   0A0D 88 82              2316 	mov	dpl,r0
   0A0F 89 83              2317 	mov	dph,r1
   0A11 C0 02              2318 	push	ar2
   0A13 C0 03              2319 	push	ar3
   0A15 C0 04              2320 	push	ar4
   0A17 C0 05              2321 	push	ar5
   0A19 C0 00              2322 	push	ar0
   0A1B C0 01              2323 	push	ar1
   0A1D 12s00r00           2324 	lcall	_move_left
   0A20 D0 01              2325 	pop	ar1
   0A22 D0 00              2326 	pop	ar0
   0A24 D0 05              2327 	pop	ar5
   0A26 D0 04              2328 	pop	ar4
   0A28 D0 03              2329 	pop	ar3
   0A2A D0 02              2330 	pop	ar2
                           2331 ;	stepper_xy.c:146: move_up(1*new_steps);
                           2332 ;	genCall
   0A2C 88 82              2333 	mov	dpl,r0
   0A2E 89 83              2334 	mov	dph,r1
   0A30 C0 02              2335 	push	ar2
   0A32 C0 03              2336 	push	ar3
   0A34 C0 04              2337 	push	ar4
   0A36 C0 05              2338 	push	ar5
   0A38 C0 00              2339 	push	ar0
   0A3A C0 01              2340 	push	ar1
   0A3C 12s0DrA6           2341 	lcall	_move_up
   0A3F D0 01              2342 	pop	ar1
   0A41 D0 00              2343 	pop	ar0
   0A43 D0 05              2344 	pop	ar5
   0A45 D0 04              2345 	pop	ar4
   0A47 D0 03              2346 	pop	ar3
   0A49 D0 02              2347 	pop	ar2
                           2348 ;	stepper_xy.c:147: move_left(1*new_steps);
                           2349 ;	genCall
   0A4B 88 82              2350 	mov	dpl,r0
   0A4D 89 83              2351 	mov	dph,r1
   0A4F C0 02              2352 	push	ar2
   0A51 C0 03              2353 	push	ar3
   0A53 C0 04              2354 	push	ar4
   0A55 C0 05              2355 	push	ar5
   0A57 C0 00              2356 	push	ar0
   0A59 C0 01              2357 	push	ar1
   0A5B 12s00r00           2358 	lcall	_move_left
   0A5E D0 01              2359 	pop	ar1
   0A60 D0 00              2360 	pop	ar0
   0A62 D0 05              2361 	pop	ar5
   0A64 D0 04              2362 	pop	ar4
   0A66 D0 03              2363 	pop	ar3
   0A68 D0 02              2364 	pop	ar2
                           2365 ;	stepper_xy.c:148: move_up(2*new_steps);
                           2366 ;	genCall
   0A6A 8C 82              2367 	mov	dpl,r4
   0A6C 8D 83              2368 	mov	dph,r5
   0A6E C0 02              2369 	push	ar2
   0A70 C0 03              2370 	push	ar3
   0A72 C0 00              2371 	push	ar0
   0A74 C0 01              2372 	push	ar1
   0A76 12s0DrA6           2373 	lcall	_move_up
   0A79 D0 01              2374 	pop	ar1
   0A7B D0 00              2375 	pop	ar0
   0A7D D0 03              2376 	pop	ar3
   0A7F D0 02              2377 	pop	ar2
                           2378 ;	stepper_xy.c:149: move_left(1*new_steps);
                           2379 ;	genCall
   0A81 88 82              2380 	mov	dpl,r0
   0A83 89 83              2381 	mov	dph,r1
   0A85 C0 02              2382 	push	ar2
   0A87 C0 03              2383 	push	ar3
   0A89 C0 00              2384 	push	ar0
   0A8B C0 01              2385 	push	ar1
   0A8D 12s00r00           2386 	lcall	_move_left
   0A90 D0 01              2387 	pop	ar1
   0A92 D0 00              2388 	pop	ar0
   0A94 D0 03              2389 	pop	ar3
   0A96 D0 02              2390 	pop	ar2
                           2391 ;	stepper_xy.c:150: move_up(3*new_steps);
                           2392 ;	genCall
   0A98 8A 82              2393 	mov	dpl,r2
   0A9A 8B 83              2394 	mov	dph,r3
   0A9C C0 00              2395 	push	ar0
   0A9E C0 01              2396 	push	ar1
   0AA0 12s0DrA6           2397 	lcall	_move_up
   0AA3 D0 01              2398 	pop	ar1
   0AA5 D0 00              2399 	pop	ar0
                           2400 ;	stepper_xy.c:151: move_left(1*new_steps);
                           2401 ;	genCall
   0AA7 88 82              2402 	mov	dpl,r0
   0AA9 89 83              2403 	mov	dph,r1
   0AAB 12s00r00           2404 	lcall	_move_left
                           2405 ;	stepper_xy.c:152: move_up(4*new_steps);
                           2406 ;	genCall
   0AAE 85*0C 82           2407 	mov	dpl,_down_up_left_sloc0_1_0
   0AB1 85*0D 83           2408 	mov	dph,(_down_up_left_sloc0_1_0 + 1)
                           2409 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0AB4 02s0DrA6           2410 	ljmp	_move_up
                           2411 ;
                           2412 ;------------------------------------------------------------
                           2413 ;Allocation info for local variables in function 'left_up_right'
                           2414 ;------------------------------------------------------------
                           2415 ;sloc0                     Allocated with name '_left_up_right_sloc0_1_0'
                           2416 ;sloc1                     Allocated with name '_left_up_right_sloc1_1_0'
                           2417 ;new_steps                 Allocated with name '_left_up_right_new_steps_1_1'
                           2418 ;------------------------------------------------------------
                           2419 ;	stepper_xy.c:155: void left_up_right(float new_steps)
                           2420 ;	-----------------------------------------
                           2421 ;	 function left_up_right
                           2422 ;	-----------------------------------------
   0AB7                    2423 _left_up_right:
                           2424 ;	genReceive
   0AB7 AA 82              2425 	mov	r2,dpl
   0AB9 AB 83              2426 	mov	r3,dph
   0ABB AC F0              2427 	mov	r4,b
   0ABD FD                 2428 	mov	r5,a
   0ABE 90s00r18           2429 	mov	dptr,#_left_up_right_new_steps_1_1
   0AC1 EA                 2430 	mov	a,r2
   0AC2 F0                 2431 	movx	@dptr,a
   0AC3 A3                 2432 	inc	dptr
   0AC4 EB                 2433 	mov	a,r3
   0AC5 F0                 2434 	movx	@dptr,a
   0AC6 A3                 2435 	inc	dptr
   0AC7 EC                 2436 	mov	a,r4
   0AC8 F0                 2437 	movx	@dptr,a
   0AC9 A3                 2438 	inc	dptr
   0ACA ED                 2439 	mov	a,r5
   0ACB F0                 2440 	movx	@dptr,a
                           2441 ;	stepper_xy.c:157: new_steps= new_steps*STEPS_PER_UNIT_ARC;
                           2442 ;	genAssign
   0ACC 90s00r18           2443 	mov	dptr,#_left_up_right_new_steps_1_1
   0ACF E0                 2444 	movx	a,@dptr
   0AD0 FA                 2445 	mov	r2,a
   0AD1 A3                 2446 	inc	dptr
   0AD2 E0                 2447 	movx	a,@dptr
   0AD3 FB                 2448 	mov	r3,a
   0AD4 A3                 2449 	inc	dptr
   0AD5 E0                 2450 	movx	a,@dptr
   0AD6 FC                 2451 	mov	r4,a
   0AD7 A3                 2452 	inc	dptr
   0AD8 E0                 2453 	movx	a,@dptr
   0AD9 FD                 2454 	mov	r5,a
                           2455 ;	genIpush
                           2456 ;	Peephole 181	changed mov to clr
   0ADA E4                 2457 	clr	a
   0ADB C0 E0              2458 	push	acc
   0ADD C0 E0              2459 	push	acc
   0ADF 74 80              2460 	mov	a,#0x80
   0AE1 C0 E0              2461 	push	acc
   0AE3 74 40              2462 	mov	a,#0x40
   0AE5 C0 E0              2463 	push	acc
                           2464 ;	genCall
   0AE7 8A 82              2465 	mov	dpl,r2
   0AE9 8B 83              2466 	mov	dph,r3
   0AEB 8C F0              2467 	mov	b,r4
   0AED ED                 2468 	mov	a,r5
   0AEE 12s00r00           2469 	lcall	___fsmul
   0AF1 AA 82              2470 	mov	r2,dpl
   0AF3 AB 83              2471 	mov	r3,dph
   0AF5 AC F0              2472 	mov	r4,b
   0AF7 FD                 2473 	mov	r5,a
   0AF8 E5 81              2474 	mov	a,sp
   0AFA 24 FC              2475 	add	a,#0xfc
   0AFC F5 81              2476 	mov	sp,a
                           2477 ;	genAssign
   0AFE 90s00r18           2478 	mov	dptr,#_left_up_right_new_steps_1_1
   0B01 EA                 2479 	mov	a,r2
   0B02 F0                 2480 	movx	@dptr,a
   0B03 A3                 2481 	inc	dptr
   0B04 EB                 2482 	mov	a,r3
   0B05 F0                 2483 	movx	@dptr,a
   0B06 A3                 2484 	inc	dptr
   0B07 EC                 2485 	mov	a,r4
   0B08 F0                 2486 	movx	@dptr,a
   0B09 A3                 2487 	inc	dptr
   0B0A ED                 2488 	mov	a,r5
   0B0B F0                 2489 	movx	@dptr,a
                           2490 ;	stepper_xy.c:158: move_up(4*new_steps);
                           2491 ;	genAssign
   0B0C 90s00r18           2492 	mov	dptr,#_left_up_right_new_steps_1_1
   0B0F E0                 2493 	movx	a,@dptr
   0B10 F5*14              2494 	mov	_left_up_right_sloc1_1_0,a
   0B12 A3                 2495 	inc	dptr
   0B13 E0                 2496 	movx	a,@dptr
   0B14 F5*15              2497 	mov	(_left_up_right_sloc1_1_0 + 1),a
   0B16 A3                 2498 	inc	dptr
   0B17 E0                 2499 	movx	a,@dptr
   0B18 F5*16              2500 	mov	(_left_up_right_sloc1_1_0 + 2),a
   0B1A A3                 2501 	inc	dptr
   0B1B E0                 2502 	movx	a,@dptr
   0B1C F5*17              2503 	mov	(_left_up_right_sloc1_1_0 + 3),a
                           2504 ;	genIpush
                           2505 ;	Peephole 181	changed mov to clr
   0B1E E4                 2506 	clr	a
   0B1F C0 E0              2507 	push	acc
   0B21 C0 E0              2508 	push	acc
   0B23 74 80              2509 	mov	a,#0x80
   0B25 C0 E0              2510 	push	acc
   0B27 74 40              2511 	mov	a,#0x40
   0B29 C0 E0              2512 	push	acc
                           2513 ;	genCall
   0B2B 85*14 82           2514 	mov	dpl,_left_up_right_sloc1_1_0
   0B2E 85*15 83           2515 	mov	dph,(_left_up_right_sloc1_1_0 + 1)
   0B31 85*16 F0           2516 	mov	b,(_left_up_right_sloc1_1_0 + 2)
   0B34 E5*17              2517 	mov	a,(_left_up_right_sloc1_1_0 + 3)
   0B36 12s00r00           2518 	lcall	___fsmul
   0B39 AE 82              2519 	mov	r6,dpl
   0B3B AF 83              2520 	mov	r7,dph
   0B3D A8 F0              2521 	mov	r0,b
   0B3F F9                 2522 	mov	r1,a
   0B40 E5 81              2523 	mov	a,sp
   0B42 24 FC              2524 	add	a,#0xfc
   0B44 F5 81              2525 	mov	sp,a
                           2526 ;	genCall
   0B46 8E 82              2527 	mov	dpl,r6
   0B48 8F 83              2528 	mov	dph,r7
   0B4A 88 F0              2529 	mov	b,r0
   0B4C E9                 2530 	mov	a,r1
   0B4D 12s00r00           2531 	lcall	___fs2uint
   0B50 85 82*12           2532 	mov	_left_up_right_sloc0_1_0,dpl
   0B53 85 83*13           2533 	mov	(_left_up_right_sloc0_1_0 + 1),dph
                           2534 ;	genCall
   0B56 85*12 82           2535 	mov	dpl,_left_up_right_sloc0_1_0
   0B59 85*13 83           2536 	mov	dph,(_left_up_right_sloc0_1_0 + 1)
   0B5C 12s0DrA6           2537 	lcall	_move_up
                           2538 ;	stepper_xy.c:159: move_right(1*new_steps);
                           2539 ;	genCall
   0B5F 85*14 82           2540 	mov	dpl,_left_up_right_sloc1_1_0
   0B62 85*15 83           2541 	mov	dph,(_left_up_right_sloc1_1_0 + 1)
   0B65 85*16 F0           2542 	mov	b,(_left_up_right_sloc1_1_0 + 2)
   0B68 E5*17              2543 	mov	a,(_left_up_right_sloc1_1_0 + 3)
   0B6A 12s00r00           2544 	lcall	___fs2uint
                           2545 ;	genCall
   0B6D A8 82              2546 	mov	r0,dpl
                           2547 ;	Peephole 177.d	removed redundant move
   0B6F A9 83              2548 	mov  r1,dph
                           2549 ;	Peephole 177.a	removed redundant mov
   0B71 C0 00              2550 	push	ar0
   0B73 C0 01              2551 	push	ar1
   0B75 12s00r5F           2552 	lcall	_move_right
   0B78 D0 01              2553 	pop	ar1
   0B7A D0 00              2554 	pop	ar0
                           2555 ;	stepper_xy.c:160: move_up(3*new_steps);
                           2556 ;	genIpush
   0B7C C0 00              2557 	push	ar0
   0B7E C0 01              2558 	push	ar1
                           2559 ;	Peephole 181	changed mov to clr
   0B80 E4                 2560 	clr	a
   0B81 C0 E0              2561 	push	acc
   0B83 C0 E0              2562 	push	acc
   0B85 74 40              2563 	mov	a,#0x40
   0B87 C0 E0              2564 	push	acc
   0B89 C0 E0              2565 	push	acc
                           2566 ;	genCall
   0B8B 85*14 82           2567 	mov	dpl,_left_up_right_sloc1_1_0
   0B8E 85*15 83           2568 	mov	dph,(_left_up_right_sloc1_1_0 + 1)
   0B91 85*16 F0           2569 	mov	b,(_left_up_right_sloc1_1_0 + 2)
   0B94 E5*17              2570 	mov	a,(_left_up_right_sloc1_1_0 + 3)
   0B96 12s00r00           2571 	lcall	___fsmul
   0B99 AE 82              2572 	mov	r6,dpl
   0B9B AF 83              2573 	mov	r7,dph
   0B9D AA F0              2574 	mov	r2,b
   0B9F FB                 2575 	mov	r3,a
   0BA0 E5 81              2576 	mov	a,sp
   0BA2 24 FC              2577 	add	a,#0xfc
   0BA4 F5 81              2578 	mov	sp,a
   0BA6 D0 01              2579 	pop	ar1
   0BA8 D0 00              2580 	pop	ar0
                           2581 ;	genCall
   0BAA 8E 82              2582 	mov	dpl,r6
   0BAC 8F 83              2583 	mov	dph,r7
   0BAE 8A F0              2584 	mov	b,r2
   0BB0 EB                 2585 	mov	a,r3
   0BB1 C0 00              2586 	push	ar0
   0BB3 C0 01              2587 	push	ar1
   0BB5 12s00r00           2588 	lcall	___fs2uint
   0BB8 AA 82              2589 	mov	r2,dpl
   0BBA AB 83              2590 	mov	r3,dph
   0BBC D0 01              2591 	pop	ar1
   0BBE D0 00              2592 	pop	ar0
                           2593 ;	genCall
   0BC0 8A 82              2594 	mov	dpl,r2
   0BC2 8B 83              2595 	mov	dph,r3
   0BC4 C0 02              2596 	push	ar2
   0BC6 C0 03              2597 	push	ar3
   0BC8 C0 00              2598 	push	ar0
   0BCA C0 01              2599 	push	ar1
   0BCC 12s0DrA6           2600 	lcall	_move_up
   0BCF D0 01              2601 	pop	ar1
   0BD1 D0 00              2602 	pop	ar0
   0BD3 D0 03              2603 	pop	ar3
   0BD5 D0 02              2604 	pop	ar2
                           2605 ;	stepper_xy.c:161: move_right(1*new_steps);
                           2606 ;	genCall
   0BD7 88 82              2607 	mov	dpl,r0
   0BD9 89 83              2608 	mov	dph,r1
   0BDB C0 02              2609 	push	ar2
   0BDD C0 03              2610 	push	ar3
   0BDF C0 00              2611 	push	ar0
   0BE1 C0 01              2612 	push	ar1
   0BE3 12s00r5F           2613 	lcall	_move_right
   0BE6 D0 01              2614 	pop	ar1
   0BE8 D0 00              2615 	pop	ar0
   0BEA D0 03              2616 	pop	ar3
   0BEC D0 02              2617 	pop	ar2
                           2618 ;	stepper_xy.c:162: move_up(2*new_steps);
                           2619 ;	genIpush
   0BEE C0 02              2620 	push	ar2
   0BF0 C0 03              2621 	push	ar3
   0BF2 C0 00              2622 	push	ar0
   0BF4 C0 01              2623 	push	ar1
                           2624 ;	Peephole 181	changed mov to clr
   0BF6 E4                 2625 	clr	a
   0BF7 C0 E0              2626 	push	acc
   0BF9 C0 E0              2627 	push	acc
   0BFB C0 E0              2628 	push	acc
   0BFD 74 40              2629 	mov	a,#0x40
   0BFF C0 E0              2630 	push	acc
                           2631 ;	genCall
   0C01 85*14 82           2632 	mov	dpl,_left_up_right_sloc1_1_0
   0C04 85*15 83           2633 	mov	dph,(_left_up_right_sloc1_1_0 + 1)
   0C07 85*16 F0           2634 	mov	b,(_left_up_right_sloc1_1_0 + 2)
   0C0A E5*17              2635 	mov	a,(_left_up_right_sloc1_1_0 + 3)
   0C0C 12s00r00           2636 	lcall	___fsmul
   0C0F AC 82              2637 	mov	r4,dpl
   0C11 AD 83              2638 	mov	r5,dph
   0C13 AE F0              2639 	mov	r6,b
   0C15 FF                 2640 	mov	r7,a
   0C16 E5 81              2641 	mov	a,sp
   0C18 24 FC              2642 	add	a,#0xfc
   0C1A F5 81              2643 	mov	sp,a
   0C1C D0 01              2644 	pop	ar1
   0C1E D0 00              2645 	pop	ar0
   0C20 D0 03              2646 	pop	ar3
   0C22 D0 02              2647 	pop	ar2
                           2648 ;	genCall
   0C24 8C 82              2649 	mov	dpl,r4
   0C26 8D 83              2650 	mov	dph,r5
   0C28 8E F0              2651 	mov	b,r6
   0C2A EF                 2652 	mov	a,r7
   0C2B C0 02              2653 	push	ar2
   0C2D C0 03              2654 	push	ar3
   0C2F C0 00              2655 	push	ar0
   0C31 C0 01              2656 	push	ar1
   0C33 12s00r00           2657 	lcall	___fs2uint
   0C36 AC 82              2658 	mov	r4,dpl
   0C38 AD 83              2659 	mov	r5,dph
   0C3A D0 01              2660 	pop	ar1
   0C3C D0 00              2661 	pop	ar0
   0C3E D0 03              2662 	pop	ar3
   0C40 D0 02              2663 	pop	ar2
                           2664 ;	genCall
   0C42 8C 82              2665 	mov	dpl,r4
   0C44 8D 83              2666 	mov	dph,r5
   0C46 C0 02              2667 	push	ar2
   0C48 C0 03              2668 	push	ar3
   0C4A C0 04              2669 	push	ar4
   0C4C C0 05              2670 	push	ar5
   0C4E C0 00              2671 	push	ar0
   0C50 C0 01              2672 	push	ar1
   0C52 12s0DrA6           2673 	lcall	_move_up
   0C55 D0 01              2674 	pop	ar1
   0C57 D0 00              2675 	pop	ar0
   0C59 D0 05              2676 	pop	ar5
   0C5B D0 04              2677 	pop	ar4
   0C5D D0 03              2678 	pop	ar3
   0C5F D0 02              2679 	pop	ar2
                           2680 ;	stepper_xy.c:163: move_right(1*new_steps);
                           2681 ;	genCall
   0C61 88 82              2682 	mov	dpl,r0
   0C63 89 83              2683 	mov	dph,r1
   0C65 C0 02              2684 	push	ar2
   0C67 C0 03              2685 	push	ar3
   0C69 C0 04              2686 	push	ar4
   0C6B C0 05              2687 	push	ar5
   0C6D C0 00              2688 	push	ar0
   0C6F C0 01              2689 	push	ar1
   0C71 12s00r5F           2690 	lcall	_move_right
   0C74 D0 01              2691 	pop	ar1
   0C76 D0 00              2692 	pop	ar0
   0C78 D0 05              2693 	pop	ar5
   0C7A D0 04              2694 	pop	ar4
   0C7C D0 03              2695 	pop	ar3
   0C7E D0 02              2696 	pop	ar2
                           2697 ;	stepper_xy.c:164: move_up(2*new_steps);
                           2698 ;	genCall
   0C80 8C 82              2699 	mov	dpl,r4
   0C82 8D 83              2700 	mov	dph,r5
   0C84 C0 02              2701 	push	ar2
   0C86 C0 03              2702 	push	ar3
   0C88 C0 04              2703 	push	ar4
   0C8A C0 05              2704 	push	ar5
   0C8C C0 00              2705 	push	ar0
   0C8E C0 01              2706 	push	ar1
   0C90 12s0DrA6           2707 	lcall	_move_up
   0C93 D0 01              2708 	pop	ar1
   0C95 D0 00              2709 	pop	ar0
   0C97 D0 05              2710 	pop	ar5
   0C99 D0 04              2711 	pop	ar4
   0C9B D0 03              2712 	pop	ar3
   0C9D D0 02              2713 	pop	ar2
                           2714 ;	stepper_xy.c:165: move_right(1*new_steps);
                           2715 ;	genCall
   0C9F 88 82              2716 	mov	dpl,r0
   0CA1 89 83              2717 	mov	dph,r1
   0CA3 C0 02              2718 	push	ar2
   0CA5 C0 03              2719 	push	ar3
   0CA7 C0 04              2720 	push	ar4
   0CA9 C0 05              2721 	push	ar5
   0CAB C0 00              2722 	push	ar0
   0CAD C0 01              2723 	push	ar1
   0CAF 12s00r5F           2724 	lcall	_move_right
   0CB2 D0 01              2725 	pop	ar1
   0CB4 D0 00              2726 	pop	ar0
   0CB6 D0 05              2727 	pop	ar5
   0CB8 D0 04              2728 	pop	ar4
   0CBA D0 03              2729 	pop	ar3
   0CBC D0 02              2730 	pop	ar2
                           2731 ;	stepper_xy.c:166: move_up(1*new_steps);
                           2732 ;	genCall
   0CBE 88 82              2733 	mov	dpl,r0
   0CC0 89 83              2734 	mov	dph,r1
   0CC2 C0 02              2735 	push	ar2
   0CC4 C0 03              2736 	push	ar3
   0CC6 C0 04              2737 	push	ar4
   0CC8 C0 05              2738 	push	ar5
   0CCA C0 00              2739 	push	ar0
   0CCC C0 01              2740 	push	ar1
   0CCE 12s0DrA6           2741 	lcall	_move_up
   0CD1 D0 01              2742 	pop	ar1
   0CD3 D0 00              2743 	pop	ar0
   0CD5 D0 05              2744 	pop	ar5
   0CD7 D0 04              2745 	pop	ar4
   0CD9 D0 03              2746 	pop	ar3
   0CDB D0 02              2747 	pop	ar2
                           2748 ;	stepper_xy.c:167: move_right(1*new_steps);
                           2749 ;	genCall
   0CDD 88 82              2750 	mov	dpl,r0
   0CDF 89 83              2751 	mov	dph,r1
   0CE1 C0 02              2752 	push	ar2
   0CE3 C0 03              2753 	push	ar3
   0CE5 C0 04              2754 	push	ar4
   0CE7 C0 05              2755 	push	ar5
   0CE9 C0 00              2756 	push	ar0
   0CEB C0 01              2757 	push	ar1
   0CED 12s00r5F           2758 	lcall	_move_right
   0CF0 D0 01              2759 	pop	ar1
   0CF2 D0 00              2760 	pop	ar0
   0CF4 D0 05              2761 	pop	ar5
   0CF6 D0 04              2762 	pop	ar4
   0CF8 D0 03              2763 	pop	ar3
   0CFA D0 02              2764 	pop	ar2
                           2765 ;	stepper_xy.c:168: move_up(1*new_steps);
                           2766 ;	genCall
   0CFC 88 82              2767 	mov	dpl,r0
   0CFE 89 83              2768 	mov	dph,r1
   0D00 C0 02              2769 	push	ar2
   0D02 C0 03              2770 	push	ar3
   0D04 C0 04              2771 	push	ar4
   0D06 C0 05              2772 	push	ar5
   0D08 C0 00              2773 	push	ar0
   0D0A C0 01              2774 	push	ar1
   0D0C 12s0DrA6           2775 	lcall	_move_up
   0D0F D0 01              2776 	pop	ar1
   0D11 D0 00              2777 	pop	ar0
   0D13 D0 05              2778 	pop	ar5
   0D15 D0 04              2779 	pop	ar4
   0D17 D0 03              2780 	pop	ar3
   0D19 D0 02              2781 	pop	ar2
                           2782 ;	stepper_xy.c:169: move_right(1*new_steps);
                           2783 ;	genCall
   0D1B 88 82              2784 	mov	dpl,r0
   0D1D 89 83              2785 	mov	dph,r1
   0D1F C0 02              2786 	push	ar2
   0D21 C0 03              2787 	push	ar3
   0D23 C0 04              2788 	push	ar4
   0D25 C0 05              2789 	push	ar5
   0D27 C0 00              2790 	push	ar0
   0D29 C0 01              2791 	push	ar1
   0D2B 12s00r5F           2792 	lcall	_move_right
   0D2E D0 01              2793 	pop	ar1
   0D30 D0 00              2794 	pop	ar0
   0D32 D0 05              2795 	pop	ar5
   0D34 D0 04              2796 	pop	ar4
   0D36 D0 03              2797 	pop	ar3
   0D38 D0 02              2798 	pop	ar2
                           2799 ;	stepper_xy.c:170: move_up(1*new_steps);
                           2800 ;	genCall
   0D3A 88 82              2801 	mov	dpl,r0
   0D3C 89 83              2802 	mov	dph,r1
   0D3E C0 02              2803 	push	ar2
   0D40 C0 03              2804 	push	ar3
   0D42 C0 04              2805 	push	ar4
   0D44 C0 05              2806 	push	ar5
   0D46 C0 00              2807 	push	ar0
   0D48 C0 01              2808 	push	ar1
   0D4A 12s0DrA6           2809 	lcall	_move_up
   0D4D D0 01              2810 	pop	ar1
   0D4F D0 00              2811 	pop	ar0
   0D51 D0 05              2812 	pop	ar5
   0D53 D0 04              2813 	pop	ar4
   0D55 D0 03              2814 	pop	ar3
   0D57 D0 02              2815 	pop	ar2
                           2816 ;	stepper_xy.c:171: move_right(2*new_steps);
                           2817 ;	genCall
   0D59 8C 82              2818 	mov	dpl,r4
   0D5B 8D 83              2819 	mov	dph,r5
   0D5D C0 02              2820 	push	ar2
   0D5F C0 03              2821 	push	ar3
   0D61 C0 00              2822 	push	ar0
   0D63 C0 01              2823 	push	ar1
   0D65 12s00r5F           2824 	lcall	_move_right
   0D68 D0 01              2825 	pop	ar1
   0D6A D0 00              2826 	pop	ar0
   0D6C D0 03              2827 	pop	ar3
   0D6E D0 02              2828 	pop	ar2
                           2829 ;	stepper_xy.c:172: move_up(1*new_steps);
                           2830 ;	genCall
   0D70 88 82              2831 	mov	dpl,r0
   0D72 89 83              2832 	mov	dph,r1
   0D74 C0 02              2833 	push	ar2
   0D76 C0 03              2834 	push	ar3
   0D78 C0 00              2835 	push	ar0
   0D7A C0 01              2836 	push	ar1
   0D7C 12s0DrA6           2837 	lcall	_move_up
   0D7F D0 01              2838 	pop	ar1
   0D81 D0 00              2839 	pop	ar0
   0D83 D0 03              2840 	pop	ar3
   0D85 D0 02              2841 	pop	ar2
                           2842 ;	stepper_xy.c:173: move_right(3*new_steps);
                           2843 ;	genCall
   0D87 8A 82              2844 	mov	dpl,r2
   0D89 8B 83              2845 	mov	dph,r3
   0D8B C0 00              2846 	push	ar0
   0D8D C0 01              2847 	push	ar1
   0D8F 12s00r5F           2848 	lcall	_move_right
   0D92 D0 01              2849 	pop	ar1
   0D94 D0 00              2850 	pop	ar0
                           2851 ;	stepper_xy.c:174: move_up(1*new_steps);
                           2852 ;	genCall
   0D96 88 82              2853 	mov	dpl,r0
   0D98 89 83              2854 	mov	dph,r1
   0D9A 12s0DrA6           2855 	lcall	_move_up
                           2856 ;	stepper_xy.c:175: move_right(4*new_steps);
                           2857 ;	genCall
   0D9D 85*12 82           2858 	mov	dpl,_left_up_right_sloc0_1_0
   0DA0 85*13 83           2859 	mov	dph,(_left_up_right_sloc0_1_0 + 1)
                           2860 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0DA3 02s00r5F           2861 	ljmp	_move_right
                           2862 ;
                           2863 ;------------------------------------------------------------
                           2864 ;Allocation info for local variables in function 'move_up'
                           2865 ;------------------------------------------------------------
                           2866 ;u                         Allocated with name '_move_up_u_1_1'
                           2867 ;------------------------------------------------------------
                           2868 ;	stepper_xy.c:177: void move_up(unsigned int u)
                           2869 ;	-----------------------------------------
                           2870 ;	 function move_up
                           2871 ;	-----------------------------------------
   0DA6                    2872 _move_up:
                           2873 ;	genReceive
   0DA6 AA 83              2874 	mov	r2,dph
   0DA8 E5 82              2875 	mov	a,dpl
   0DAA 90s00r1C           2876 	mov	dptr,#_move_up_u_1_1
   0DAD F0                 2877 	movx	@dptr,a
   0DAE A3                 2878 	inc	dptr
   0DAF EA                 2879 	mov	a,r2
   0DB0 F0                 2880 	movx	@dptr,a
                           2881 ;	stepper_xy.c:179: EN1 = 0;
                           2882 ;	genAssign
   0DB1 C2 A0              2883 	clr	_P2_0
                           2884 ;	stepper_xy.c:180: EN2 = 0;
                           2885 ;	genAssign
   0DB3 C2 A1              2886 	clr	_P2_1
                           2887 ;	stepper_xy.c:181: DR1 = 0;
                           2888 ;	genAssign
   0DB5 C2 A3              2889 	clr	_P2_3
                           2890 ;	stepper_xy.c:182: DR2 = 1;
                           2891 ;	genAssign
   0DB7 D2 A4              2892 	setb	_P2_4
                           2893 ;	stepper_xy.c:184: while(u>0)
                           2894 ;	genAssign
   0DB9 90s00r1C           2895 	mov	dptr,#_move_up_u_1_1
   0DBC E0                 2896 	movx	a,@dptr
   0DBD FA                 2897 	mov	r2,a
   0DBE A3                 2898 	inc	dptr
   0DBF E0                 2899 	movx	a,@dptr
   0DC0 FB                 2900 	mov	r3,a
   0DC1                    2901 00101$:
                           2902 ;	genIfx
   0DC1 EA                 2903 	mov	a,r2
   0DC2 4B                 2904 	orl	a,r3
                           2905 ;	genIfxJump
                           2906 ;	Peephole 108.c	removed ljmp by inverse jump logic
   0DC3 60 33              2907 	jz	00108$
                           2908 ;	Peephole 300	removed redundant label 00109$
                           2909 ;	stepper_xy.c:186: STEPPER_STEP1=0;
                           2910 ;	genAssign
   0DC5 C2 90              2911 	clr	_P1_0
                           2912 ;	stepper_xy.c:187: STEPPER_STEP2=0;
                           2913 ;	genAssign
   0DC7 C2 94              2914 	clr	_P1_4
                           2915 ;	stepper_xy.c:188: delay_us(STEP_DELAY);
                           2916 ;	genCall
                           2917 ;	Peephole 182.b	used 16 bit load of dptr
   0DC9 90 00 11           2918 	mov	dptr,#0x0011
   0DCC C0 02              2919 	push	ar2
   0DCE C0 03              2920 	push	ar3
   0DD0 12s00r00           2921 	lcall	_delay_us
   0DD3 D0 03              2922 	pop	ar3
   0DD5 D0 02              2923 	pop	ar2
                           2924 ;	stepper_xy.c:189: STEPPER_STEP1=1;
                           2925 ;	genAssign
   0DD7 D2 90              2926 	setb	_P1_0
                           2927 ;	stepper_xy.c:190: STEPPER_STEP2=1;
                           2928 ;	genAssign
   0DD9 D2 94              2929 	setb	_P1_4
                           2930 ;	stepper_xy.c:191: delay_us(STEP_DELAY);
                           2931 ;	genCall
                           2932 ;	Peephole 182.b	used 16 bit load of dptr
   0DDB 90 00 11           2933 	mov	dptr,#0x0011
   0DDE C0 02              2934 	push	ar2
   0DE0 C0 03              2935 	push	ar3
   0DE2 12s00r00           2936 	lcall	_delay_us
   0DE5 D0 03              2937 	pop	ar3
   0DE7 D0 02              2938 	pop	ar2
                           2939 ;	stepper_xy.c:192: u--;
                           2940 ;	genMinus
                           2941 ;	genMinusDec
   0DE9 1A                 2942 	dec	r2
   0DEA BA FF 01           2943 	cjne	r2,#0xff,00110$
   0DED 1B                 2944 	dec	r3
   0DEE                    2945 00110$:
                           2946 ;	genAssign
   0DEE 90s00r1C           2947 	mov	dptr,#_move_up_u_1_1
   0DF1 EA                 2948 	mov	a,r2
   0DF2 F0                 2949 	movx	@dptr,a
   0DF3 A3                 2950 	inc	dptr
   0DF4 EB                 2951 	mov	a,r3
   0DF5 F0                 2952 	movx	@dptr,a
                           2953 ;	Peephole 112.b	changed ljmp to sjmp
   0DF6 80 C9              2954 	sjmp	00101$
   0DF8                    2955 00108$:
                           2956 ;	genAssign
   0DF8 90s00r1C           2957 	mov	dptr,#_move_up_u_1_1
   0DFB EA                 2958 	mov	a,r2
   0DFC F0                 2959 	movx	@dptr,a
   0DFD A3                 2960 	inc	dptr
   0DFE EB                 2961 	mov	a,r3
   0DFF F0                 2962 	movx	@dptr,a
                           2963 ;	stepper_xy.c:194: EN1 = 1;
                           2964 ;	genAssign
   0E00 D2 A0              2965 	setb	_P2_0
                           2966 ;	stepper_xy.c:195: EN2 = 1;
                           2967 ;	genAssign
   0E02 D2 A1              2968 	setb	_P2_1
                           2969 ;	Peephole 300	removed redundant label 00104$
   0E04 22                 2970 	ret
                           2971 ;------------------------------------------------------------
                           2972 ;Allocation info for local variables in function 'move_down'
                           2973 ;------------------------------------------------------------
                           2974 ;d                         Allocated with name '_move_down_d_1_1'
                           2975 ;------------------------------------------------------------
                           2976 ;	stepper_xy.c:197: void move_down(unsigned int d)
                           2977 ;	-----------------------------------------
                           2978 ;	 function move_down
                           2979 ;	-----------------------------------------
   0E05                    2980 _move_down:
                           2981 ;	genReceive
   0E05 AA 83              2982 	mov	r2,dph
   0E07 E5 82              2983 	mov	a,dpl
   0E09 90s00r1E           2984 	mov	dptr,#_move_down_d_1_1
   0E0C F0                 2985 	movx	@dptr,a
   0E0D A3                 2986 	inc	dptr
   0E0E EA                 2987 	mov	a,r2
   0E0F F0                 2988 	movx	@dptr,a
                           2989 ;	stepper_xy.c:199: EN1 = 0;
                           2990 ;	genAssign
   0E10 C2 A0              2991 	clr	_P2_0
                           2992 ;	stepper_xy.c:200: EN2 = 0;
                           2993 ;	genAssign
   0E12 C2 A1              2994 	clr	_P2_1
                           2995 ;	stepper_xy.c:202: DR1 = 1;
                           2996 ;	genAssign
   0E14 D2 A3              2997 	setb	_P2_3
                           2998 ;	stepper_xy.c:203: DR2 = 0;
                           2999 ;	genAssign
   0E16 C2 A4              3000 	clr	_P2_4
                           3001 ;	stepper_xy.c:205: while(d>0)
                           3002 ;	genAssign
   0E18 90s00r1E           3003 	mov	dptr,#_move_down_d_1_1
   0E1B E0                 3004 	movx	a,@dptr
   0E1C FA                 3005 	mov	r2,a
   0E1D A3                 3006 	inc	dptr
   0E1E E0                 3007 	movx	a,@dptr
   0E1F FB                 3008 	mov	r3,a
   0E20                    3009 00101$:
                           3010 ;	genIfx
   0E20 EA                 3011 	mov	a,r2
   0E21 4B                 3012 	orl	a,r3
                           3013 ;	genIfxJump
                           3014 ;	Peephole 108.c	removed ljmp by inverse jump logic
   0E22 60 33              3015 	jz	00108$
                           3016 ;	Peephole 300	removed redundant label 00109$
                           3017 ;	stepper_xy.c:207: STEPPER_STEP1=0;
                           3018 ;	genAssign
   0E24 C2 90              3019 	clr	_P1_0
                           3020 ;	stepper_xy.c:208: STEPPER_STEP2=0;
                           3021 ;	genAssign
   0E26 C2 94              3022 	clr	_P1_4
                           3023 ;	stepper_xy.c:209: delay_us(STEP_DELAY);
                           3024 ;	genCall
                           3025 ;	Peephole 182.b	used 16 bit load of dptr
   0E28 90 00 11           3026 	mov	dptr,#0x0011
   0E2B C0 02              3027 	push	ar2
   0E2D C0 03              3028 	push	ar3
   0E2F 12s00r00           3029 	lcall	_delay_us
   0E32 D0 03              3030 	pop	ar3
   0E34 D0 02              3031 	pop	ar2
                           3032 ;	stepper_xy.c:210: STEPPER_STEP1=1;
                           3033 ;	genAssign
   0E36 D2 90              3034 	setb	_P1_0
                           3035 ;	stepper_xy.c:211: STEPPER_STEP2=1;
                           3036 ;	genAssign
   0E38 D2 94              3037 	setb	_P1_4
                           3038 ;	stepper_xy.c:212: delay_us(STEP_DELAY);
                           3039 ;	genCall
                           3040 ;	Peephole 182.b	used 16 bit load of dptr
   0E3A 90 00 11           3041 	mov	dptr,#0x0011
   0E3D C0 02              3042 	push	ar2
   0E3F C0 03              3043 	push	ar3
   0E41 12s00r00           3044 	lcall	_delay_us
   0E44 D0 03              3045 	pop	ar3
   0E46 D0 02              3046 	pop	ar2
                           3047 ;	stepper_xy.c:213: d--;
                           3048 ;	genMinus
                           3049 ;	genMinusDec
   0E48 1A                 3050 	dec	r2
   0E49 BA FF 01           3051 	cjne	r2,#0xff,00110$
   0E4C 1B                 3052 	dec	r3
   0E4D                    3053 00110$:
                           3054 ;	genAssign
   0E4D 90s00r1E           3055 	mov	dptr,#_move_down_d_1_1
   0E50 EA                 3056 	mov	a,r2
   0E51 F0                 3057 	movx	@dptr,a
   0E52 A3                 3058 	inc	dptr
   0E53 EB                 3059 	mov	a,r3
   0E54 F0                 3060 	movx	@dptr,a
                           3061 ;	Peephole 112.b	changed ljmp to sjmp
   0E55 80 C9              3062 	sjmp	00101$
   0E57                    3063 00108$:
                           3064 ;	genAssign
   0E57 90s00r1E           3065 	mov	dptr,#_move_down_d_1_1
   0E5A EA                 3066 	mov	a,r2
   0E5B F0                 3067 	movx	@dptr,a
   0E5C A3                 3068 	inc	dptr
   0E5D EB                 3069 	mov	a,r3
   0E5E F0                 3070 	movx	@dptr,a
                           3071 ;	stepper_xy.c:215: EN1 = 1;
                           3072 ;	genAssign
   0E5F D2 A0              3073 	setb	_P2_0
                           3074 ;	stepper_xy.c:216: EN2 = 1;
                           3075 ;	genAssign
   0E61 D2 A1              3076 	setb	_P2_1
                           3077 ;	Peephole 300	removed redundant label 00104$
   0E63 22                 3078 	ret
                           3079 	.area CSEG    (CODE)
                           3080 	.area CONST   (CODE)
                           3081 	.area XINIT   (CODE)
